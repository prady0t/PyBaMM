{"py/object": "pybamm.models.full_battery_models.lithium_ion.spme.SPMe", "py/id": 6112465824, "pybamm_version": "24.1", "name": "Single Particle Model with electrolyte", "options": {"calculate discharge energy": "false", "calculate heat source for isothermal models": "false", "cell geometry": "arbitrary", "contact resistance": "false", "convection": "none", "current collector": "uniform", "diffusivity": "single", "dimensionality": 0, "electrolyte conductivity": "default", "exchange-current density": "single", "hydrolysis": "false", "intercalation kinetics": "symmetric Butler-Volmer", "interface utilisation": "full", "lithium plating": "none", "lithium plating porosity change": "false", "loss of active material": "none", "number of MSMR reactions": "none", "open-circuit potential": "single", "operating mode": "current", "particle": "Fickian diffusion", "particle mechanics": "none", "particle phases": "1", "particle shape": "spherical", "particle size": "single", "SEI": ["interstitial-diffusion limited", "none"], "SEI film resistance": "distributed", "SEI on cracks": "false", "SEI porosity change": "false", "stress-induced diffusion": "false", "surface form": "false", "thermal": "isothermal", "total interfacial current density as a state": "true", "transport efficiency": "Bruggeman", "working electrode": "both", "x-average side reactions": "false"}, "bounds": [[-Infinity, -Infinity, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity, -Infinity], [Infinity, Infinity, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 24983.2619938437, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, 51217.9257309275, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity, Infinity]], "concatenated_rhs": {"py/object": "pybamm.expression_tree.concatenations.NumpyConcatenation", "py/id": 6327987968, "name": "numpy_concatenation", "id": 1929766161057080884, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327991424, "name": "Column vector of length 1", "id": -3750052792965657564, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": [[0.00018906]], "children": []}, {"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327991424, "name": "Column vector of length 1", "id": -3750052792965657564, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": [[0.00018906]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6328074656, "name": "+", "id": -1725921407127648857, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327992000, "name": "@", "id": -4923697407403041524, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327992288, "name": "Sparse Matrix (20, 20)", "id": -3172611660939401747, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 20], "data": [0.46799999999999997, -0.46799999999999997, 0.26742857142857135, -0.33428571428571413, 0.06685714285714284, 0.2216842105263158, -0.32021052631578945, 0.09852631578947364, 0.20237837837837827, -0.3162162162162161, 0.11383783783783784, 0.19180327868852443, -0.31455737704918, 0.12275409836065562, 0.18514285714285736, -0.3137142857142859, 0.12857142857142853, 0.18056692913385822, -0.31322834645669306, 0.13266141732283482, 0.17723076923076905, -0.31292307692307664, 0.13569230769230756, 0.17469124423963112, -0.3127188940092162, 0.1380276497695851, 0.17269372693726953, -0.3125756457564576, 0.13988191881918807, 0.17108157099697885, -0.3124712990936559, 0.14138972809667702, 0.16975314861460938, -0.3123929471032742, 0.14263979848866482, 0.16863965884861393, -0.31233262260127903, 0.1436929637526651, 0.16769287020109722, -0.3122851919561247, 0.14459232175502748, 0.16687797147385053, -0.31224722662440524, 0.1453692551505547, 0.1661692094313458, -0.31221636615811377, 0.14604715672676796, 0.16554712362301016, -0.31219094247245965, 0.1466438188494495, 0.1649967355821549, -0.31216974972796485, 0.14717301414580997, 0.16450632911392388, -0.31215189873417737, 0.14764556962025352, -0.14807011393514496, 0.14807011393514496], "row_indices": [1, 0, 2, 1, 0, 3, 2, 1, 4, 3, 2, 5, 4, 3, 6, 5, 4, 7, 6, 5, 8, 7, 6, 9, 8, 7, 10, 9, 8, 11, 10, 9, 12, 11, 10, 13, 12, 11, 14, 13, 12, 15, 14, 13, 16, 15, 14, 17, 16, 15, 18, 17, 16, 19, 18, 17, 19, 18], "column_pointers": [0, 2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 58]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327992240, "name": "@", "id": 2623613401998262838, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6328074800, "name": "Column vector of length 20", "id": 5931591590001308546, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [3.2835305549534856e-12], "row_indices": [0], "column_pointers": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958464, "name": "+", "id": 2729163798536975451, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325755136, "name": "-354334005.35445225", "id": -6194761156310244790, "value": -354334005.35445225, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326958704, "name": "@", "id": -5318647304396293531, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326958176, "name": "Sparse Matrix (1, 20)", "id": 1311049403016195749, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [26575050.40158392, 26575050.40158392, 26575050.401583925, 26575050.401583917, 26575050.401583917, 26575050.401583936, 26575050.401583917, 26575050.401583917, 26575050.401583917, 26575050.401583917, 26575050.401583917, 26575050.401583955, 26575050.401583917, 26575050.401583917, 26575050.401583917, 26575050.401583917, 26575050.401583917, 26575050.401583917, 26575050.401583917, 26575050.401583917], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326850848, "name": "*", "id": 4477615762982791052, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326597056, "name": "Column vector of length 20", "id": -3753048836121971523, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326850704, "name": "*", "id": -6608787229141046598, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.unary_operators.Negate", "py/id": 6326726208, "name": "-", "id": -8575740431784979443, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326204272, "name": "/", "id": -7995767050945229670, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326599600, "name": "2.8945599636000004e-06", "id": -8176240938359952412, "value": 2.8945599636000004e-06, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326597200, "name": "y[122:142]", "id": -4654073562494662926, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 122, "stop": 142, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.functions.Exp", "py/id": 6326726976, "name": "function (exp)", "id": 5664946884854084312, "function": "exp", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326848544, "name": "-", "id": 802813446367908590, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326724288, "name": "Column vector of length 20", "id": 6949370380014700620, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3.937618094102231e-05], [0.00011513794680222979], [0.0001869122513023211], [0.0002546990944412962], [0.0003184984762191551], [0.00037831039663589793], [0.00043413485569152445], [0.00048597185338603477], [0.000533821389719429], [0.000577683464691707], [0.0006175580783028689], [0.0006534452305529144], [0.0006853449214418439], [0.0007132571509696573], [0.0007371819191363543], [0.0007571192259419353], [0.0007730690713863999], [0.0007850314554697486], [0.0007930063781919808], [0.0007969938395530971]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326850272, "name": "-", "id": -5169445016212977198, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326849888, "name": "-", "id": 641364474574074541, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326849168, "name": "+", "id": 3987160593828614159, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326849024, "name": "@", "id": -6542898431559840529, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326849216, "name": "Column vector of length 20", "id": 3722985615507650919, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [-38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326960048, "name": "-", "id": 8166320490570836002, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326957024, "name": "-", "id": -1426400927845783288, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326953280, "name": "+", "id": -87681102096113063, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326953136, "name": "Column vector of length 1", "id": 7498350506610149221, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "entries": [[-1.3664024208854978e-05]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326952128, "name": "-", "id": -3553484892908894406, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326728224, "name": "+", "id": -8293531578467133416, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326716848, "name": "@", "id": -7897331072600810934, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326716944, "name": "Sparse Matrix (1, 20)", "id": 2554937835408777545, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-6.666666666666666e-05, -6.666666666666666e-05, -6.666666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.66666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666674e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326724192, "name": "y[102:122]", "id": 5822907568351388675, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 102, "stop": 122, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326717088, "name": "@", "id": 2408778673299547818, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326728320, "name": "Sparse Matrix (1, 20)", "id": 2554937835408777545, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-6.666666666666666e-05, -6.666666666666666e-05, -6.666666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.66666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666674e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326597200, "name": "y[122:142]", "id": -4654073562494662926, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 122, "stop": 142, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951984, "name": "+", "id": -6068800631112939481, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944880, "name": "@", "id": 4277053689203630480, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326944688, "name": "Sparse Matrix (1, 20)", "id": -2763416208417960285, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0025692579121493727, 0.0025692579121493727, 0.002569257912149373, 0.0025692579121493727, 0.0025692579121493727, 0.002569257912149374, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493757, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Arcsinh", "py/id": 6326729184, "name": "function (arcsinh)", "id": 5781459614506051753, "function": "arcsinh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326726304, "name": "/", "id": 2429643751737650172, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325475936, "name": "0.6666666666666666", "id": -4601659744691921001, "value": 0.6666666666666666, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326599552, "name": "*", "id": -2432302278190366528, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326722944, "name": "*", "id": 7382909411869586226, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730288, "name": "*", "id": 3479221902762568791, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325472720, "name": "2e-05", "id": -416325789226925075, "value": 2e-05, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326730144, "name": "**", "id": -3866013196173468146, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326729472, "name": "maximum", "id": -38866897276748842, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324524848, "name": "1e-08", "id": 2248593343453076709, "value": 1e-08, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326715984, "name": "@", "id": -381515773720244289, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326730096, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326729856, "name": "**", "id": -1868943510485275387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326730432, "name": "maximum", "id": -4830756954153364032, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326730480, "name": "minimum", "id": -7371976683556488613, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326729712, "name": "@", "id": -7947777665951828331, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326717136, "name": "Sparse Matrix (1, 20)", "id": -1311178267164410342, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-12491.630996921805, 37474.892990765504], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195968, "name": "24983.261744011077", "id": -173151486002828470, "value": 24983.261744011077, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195008, "name": "0.000249832619938437", "id": 5018604233361534579, "value": 0.000249832619938437, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6215798272, "name": "@", "id": -2607619662398425646, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326719632, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326724432, "name": "**", "id": 8840658232720572223, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326723184, "name": "-", "id": 2338145762588095178, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325193376, "name": "Maximum concentration in negative electrode [mol.m-3]", "id": -4006365182696779717, "value": 24983.2619938437, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326730432, "name": "maximum", "id": -4830756954153364032, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326730480, "name": "minimum", "id": -7371976683556488613, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326729712, "name": "@", "id": -7947777665951828331, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326717136, "name": "Sparse Matrix (1, 20)", "id": -1311178267164410342, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-12491.630996921805, 37474.892990765504], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195968, "name": "24983.261744011077", "id": -173151486002828470, "value": 24983.261744011077, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195008, "name": "0.000249832619938437", "id": 5018604233361534579, "value": 0.000249832619938437, "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951840, "name": "+", "id": 2221407163864304667, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950976, "name": "+", "id": -2960133066485095630, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326950352, "name": "-", "id": -9139240763802421065, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326949776, "name": "-", "id": -380020215870947602, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326949104, "name": "-", "id": -8985395728359068257, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326948432, "name": "-", "id": -8728344082884186819, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326947808, "name": "-", "id": -824067711031895542, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326947184, "name": "-", "id": -4998106132020497923, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946560, "name": "+", "id": 7528121021614073017, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326945888, "name": "+", "id": 5359849752092524006, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477856, "name": "0.194", "id": 4251029814298257343, "value": 0.194, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326945744, "name": "*", "id": 7639587925667497463, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477568, "name": "1.5", "id": -1860591468980405701, "value": 1.5, "children": []}, {"py/object": "pybamm.expression_tree.functions.Exp", "py/id": 6326944208, "name": "function (exp)", "id": 3180788988723656329, "function": "exp", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326945648, "name": "*", "id": -37345490762490615, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477136, "name": "-120.0", "id": -2425182868076845414, "value": -120.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946416, "name": "*", "id": 7099450262039018463, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478624, "name": "0.0351", "id": -161632893335429177, "value": 0.0351, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326945552, "name": "function (tanh)", "id": 8454667870790248030, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946224, "name": "+", "id": 7942467795480504387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478960, "name": "-3.44578313253012", "id": 8444925721582764742, "value": -3.44578313253012, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946080, "name": "*", "id": 8381823886301776259, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478720, "name": "12.048192771084336", "id": 8097125027648466415, "value": 12.048192771084336, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947040, "name": "*", "id": 2048096631300921014, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478576, "name": "0.0045", "id": -2981038650488801168, "value": 0.0045, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326945984, "name": "function (tanh)", "id": -1623400745941997014, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946848, "name": "+", "id": -2416178302035251812, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480208, "name": "-7.1344537815126055", "id": 1460317602928865068, "value": -7.1344537815126055, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946752, "name": "*", "id": -851868951156677450, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480016, "name": "8.403361344537815", "id": 1404623847793106708, "value": 8.403361344537815, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947664, "name": "*", "id": -4019228816394572527, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480736, "name": "0.035", "id": 6162767455658282703, "value": 0.035, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326946656, "name": "function (tanh)", "id": -1150884761896753166, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326947520, "name": "+", "id": 7644935680070045406, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325481552, "name": "-18.466", "id": -373623245734958046, "value": -18.466, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947376, "name": "*", "id": 5731199625910651132, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325481264, "name": "20.0", "id": -4340446481305119942, "value": 20.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948288, "name": "*", "id": -8398586198298319237, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325482944, "name": "0.0147", "id": 3513533554870653346, "value": 0.0147, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326946944, "name": "function (tanh)", "id": 6946148157129530496, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326948096, "name": "+", "id": 3779098074371246036, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325483136, "name": "-14.705882352941176", "id": -5925813036394720848, "value": -14.705882352941176, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947952, "name": "*", "id": -2391216548457030335, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325482800, "name": "29.41176470588235", "id": -1937713174565683752, "value": 29.41176470588235, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948960, "name": "*", "id": -6309866705551813062, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325313968, "name": "0.102", "id": -3729995203387465972, "value": 0.102, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326947856, "name": "function (tanh)", "id": -4550779299409160821, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326948768, "name": "+", "id": 1480749490317416490, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325198608, "name": "-1.3661971830985917", "id": -8384546222245432196, "value": -1.3661971830985917, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948624, "name": "*", "id": 3728936636961048916, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484672, "name": "7.042253521126761", "id": 6960204674628031657, "value": 7.042253521126761, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949632, "name": "*", "id": 4649296532770888742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484336, "name": "0.022", "id": -1950766998167305555, "value": 0.022, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326948528, "name": "function (tanh)", "id": 1577914864793947784, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326949440, "name": "+", "id": -9088454947200883348, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484288, "name": "-54.8780487804878", "id": 7787322731592813793, "value": -54.8780487804878, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949296, "name": "*", "id": -1686636676232609815, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484144, "name": "60.975609756097555", "id": -65658111227441629, "value": 60.975609756097555, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950208, "name": "*", "id": 7119747142001126644, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480688, "name": "0.011", "id": 2677758333144557655, "value": 0.011, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326949200, "name": "function (tanh)", "id": 1097948657258569153, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950064, "name": "+", "id": 6534944802070438685, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325479440, "name": "-5.486725663716814", "id": 6197169621668094767, "value": -5.486725663716814, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949920, "name": "*", "id": -4763378136876713897, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325479968, "name": "44.24778761061947", "id": -6493965988769950205, "value": 44.24778761061947, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950832, "name": "*", "id": -6669455122115546387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477472, "name": "0.0155", "id": -2650083987933338625, "value": 0.0155, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326949536, "name": "function (tanh)", "id": 206273733215490184, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950688, "name": "+", "id": -2889338946402326512, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325474976, "name": "-3.6206896551724133", "id": -1794731523492796600, "value": -3.6206896551724133, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950544, "name": "*", "id": 6284796480753054853, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325476656, "name": "34.48275862068965", "id": -2390830538731112535, "value": 34.48275862068965, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326951696, "name": "*", "id": -6493752423506966711, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324528208, "name": "1e-06", "id": -3069320665520676574, "value": 1e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951552, "name": "+", "id": -6741445237676707870, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326950448, "name": "/", "id": 4057728519080426641, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326951120, "name": "/", "id": -3310090966227999806, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951264, "name": "+", "id": -6773688724399837147, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324527776, "name": "-1.0", "id": -8456763896046725936, "value": -1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326956928, "name": "@", "id": 8483904739322685359, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326957120, "name": "Sparse Matrix (1, 20)", "id": 1038870521767603098, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0015415547472896235, 0.0015415547472896235, 0.0015415547472896237, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896244, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896255, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Log", "py/id": 6326954288, "name": "function (log)", "id": -5030701221925340772, "function": "log", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326955536, "name": "maximum", "id": 4171024460717429445, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326955632, "name": "/", "id": -1900829629222783454, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955728, "name": "@", "id": -7873392624484173844, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955584, "name": "Sparse Matrix (20, 60)", "id": 8094614243801919291, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 60], "data": [0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223], "row_indices": [59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], "column_pointers": [0, 60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 660, 720, 780, 840, 900, 960, 1020, 1080, 1140, 1200]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324847536, "name": "1e-15", "id": -8705571835474137486, "value": 1e-15, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959904, "name": "*", "id": -4123933597739443935, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325509184, "name": "0.0024", "id": 6559832735740966387, "value": 0.0024, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959760, "name": "-", "id": 3029823735963637756, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326957456, "name": "/", "id": -5357639576507355315, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324849120, "name": "0.3333333333333333", "id": -5701793740805269720, "value": 0.3333333333333333, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958512, "name": "+", "id": 284263368525210904, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326958128, "name": "-", "id": 543545805456541861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326957696, "name": "+", "id": -7842655593740600439, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658224, "name": "0.014969257496616187", "id": -8353597445683247701, "value": 0.014969257496616187, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957552, "name": "*", "id": 4960491804341474864, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658512, "name": "0.00031386145712718525", "id": 3507164062337076, "value": 0.00031386145712718525, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957984, "name": "*", "id": 7112391073554976339, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658848, "name": "1.728612391486304e-07", "id": 4207388108385797869, "value": 1.728612391486304e-07, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958368, "name": "*", "id": 7749610267777311295, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325659232, "name": "2.5534825630890845e-11", "id": -5879707510941530913, "value": 2.5534825630890845e-11, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326958656, "name": "/", "id": 6855516544202313701, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326959472, "name": "+", "id": 8012764929235198493, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959184, "name": "-", "id": -2208441102872370140, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958896, "name": "+", "id": 2767688668933281379, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325471616, "name": "0.0911", "id": -1599851476179082992, "value": 0.0911, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958752, "name": "*", "id": 6881685191875661397, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484000, "name": "0.0019100999999999999", "id": -3779973321848982182, "value": 0.0019100999999999999, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959040, "name": "*", "id": -5173557815052613389, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325654528, "name": "1.052e-06", "id": -480156392906839787, "value": 1.052e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959328, "name": "*", "id": -9177911052441474098, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325652992, "name": "1.5540000000000003e-10", "id": -3428780814341171134, "value": 1.5540000000000003e-10, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326849552, "name": "*", "id": -6995040819281715622, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326849600, "name": "-1.2", "id": -123352467632268870, "value": -1.2, "children": []}, {"py/object": "pybamm.expression_tree.functions.Log", "py/id": 6326954288, "name": "function (log)", "id": -5030701221925340772, "function": "log", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326955536, "name": "maximum", "id": 4171024460717429445, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326955632, "name": "/", "id": -1900829629222783454, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955728, "name": "@", "id": -7873392624484173844, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955584, "name": "Sparse Matrix (20, 60)", "id": 8094614243801919291, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 60], "data": [0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223], "row_indices": [59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], "column_pointers": [0, 60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 660, 720, 780, 840, 900, 960, 1020, 1080, 1140, 1200]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324847536, "name": "1e-15", "id": -8705571835474137486, "value": 1e-15, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326849792, "name": "@", "id": 2308556946058720264, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326849984, "name": "Column vector of length 20", "id": 1795703229770559650, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [0.0019448709202649678, 0.0019351404841410657, 0.0019156796118932609, 0.0018864883035215542, 0.001847566559025945, 0.0017989143784064333, 0.00174053176166302, 0.0016724187087957042, 0.001594575219804486, 0.0015070012946893651, 0.0014096969334503426, 0.0013026621360874174, 0.0011858969026005903, 0.0010594012329898602, 0.0009231751272552286, 0.0007772185853966941, 0.000621531607414258, 0.00045611419330791875, 0.00028096634307767847, 9.60880567235345e-05], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326845712, "name": "/", "id": 2000317851754806712, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305760, "name": "23.999999999999996", "id": -1312225410768614328, "value": 23.999999999999996, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958512, "name": "+", "id": 284263368525210904, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326958128, "name": "-", "id": 543545805456541861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326957696, "name": "+", "id": -7842655593740600439, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658224, "name": "0.014969257496616187", "id": -8353597445683247701, "value": 0.014969257496616187, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957552, "name": "*", "id": 4960491804341474864, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658512, "name": "0.00031386145712718525", "id": 3507164062337076, "value": 0.00031386145712718525, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957984, "name": "*", "id": 7112391073554976339, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658848, "name": "1.728612391486304e-07", "id": 4207388108385797869, "value": 1.728612391486304e-07, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958368, "name": "*", "id": 7749610267777311295, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325659232, "name": "2.5534825630890845e-11", "id": -5879707510941530913, "value": 2.5534825630890845e-11, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326849936, "name": "@", "id": -4409303643562634318, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326850368, "name": "Column vector of length 20", "id": 3722985615507650919, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [-38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326846912, "name": "/", "id": -2809714310914432611, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325509184, "name": "0.0024", "id": 6559832735740966387, "value": 0.0024, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326959472, "name": "+", "id": 8012764929235198493, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959184, "name": "-", "id": -2208441102872370140, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958896, "name": "+", "id": 2767688668933281379, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325471616, "name": "0.0911", "id": -1599851476179082992, "value": 0.0911, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958752, "name": "*", "id": 6881685191875661397, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484000, "name": "0.0019100999999999999", "id": -3779973321848982182, "value": 0.0019100999999999999, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959040, "name": "*", "id": -5173557815052613389, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325654528, "name": "1.052e-06", "id": -480156392906839787, "value": 1.052e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959328, "name": "*", "id": -9177911052441474098, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325652992, "name": "1.5540000000000003e-10", "id": -3428780814341171134, "value": 1.5540000000000003e-10, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6328076144, "name": "+", "id": -4380916203766511580, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6328075904, "name": "Column vector of length 20", "id": 411561484488642347, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[0.0], [0.0], [0.0], [0.0], [0.0], [0.0], [0.0], [0.0], [0.0], [0.0], [0.0], [0.0], [0.0], [0.0], [0.0], [0.0], [0.0], [0.0], [0.0], [0.0006810238128045524]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6328076048, "name": "@", "id": -4040955920217987476, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6328076240, "name": "Sparse Matrix (20, 20)", "id": 1123874454684601366, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 20], "data": [1.1999999999999997, -1.1999999999999997, 0.6857142857142855, -0.8571428571428568, 0.1714285714285714, 0.5684210526315789, -0.8210526315789474, 0.2526315789473683, 0.5189189189189185, -0.8108108108108104, 0.2918918918918919, 0.49180327868852414, -0.8065573770491796, 0.31475409836065543, 0.4747252747252752, -0.8043956043956049, 0.32967032967032955, 0.46299212598425177, -0.8031496062992128, 0.34015748031496107, 0.45443786982248474, -0.8023668639053245, 0.34792899408283984, 0.4479262672811053, -0.8018433179723491, 0.35391705069124374, 0.4428044280442809, -0.8014760147601478, 0.35867158671586685, 0.43867069486404836, -0.8012084592145023, 0.362537764350454, 0.43526448362720355, -0.801007556675062, 0.36574307304785847, 0.43240938166311266, -0.800852878464818, 0.3684434968017054, 0.42998171846435196, -0.8007312614259608, 0.370749542961609, 0.4278922345483345, -0.8006339144215519, 0.37274167987321727, 0.4260748959778097, -0.8005547850208045, 0.37447988904299473, 0.42447980416156444, -0.8004895960832297, 0.3760097919216652, 0.4230685527747561, -0.8004352557127302, 0.3773667029379742, 0.42181110029211244, -0.8003894839337881, 0.37857838364167556, -0.37966695880806406, 0.37966695880806406], "row_indices": [1, 0, 2, 1, 0, 3, 2, 1, 4, 3, 2, 5, 4, 3, 6, 5, 4, 7, 6, 5, 8, 7, 6, 9, 8, 7, 10, 9, 8, 11, 10, 9, 12, 11, 10, 13, 12, 11, 14, 13, 12, 15, 14, 13, 16, 15, 14, 17, 16, 15, 18, 17, 16, 19, 18, 17, 19, 18], "column_pointers": [0, 2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 58]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327992048, "name": "-", "id": -1167522523515391477, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6328079072, "name": "Column vector of length 60", "id": -3120642237265662252, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[0.0014924548305529526], [0.0014924548305529526], [0.0014924548305529528], [0.0014924548305529526], [0.001492454830552952], [0.0014924548305529526], [0.0014924548305529518], [0.0014924548305529537], [0.0014924548305529505], [0.0014924548305529526], [0.0014924548305529528], [0.0014924548305529518], [0.00149245483055295], [0.0014924548305529537], [0.001492454830552954], [0.0014924548305529526], [0.0014924548305529502], [0.0014924548305529496], [0.0014924548305529518], [0.0017411973023117803], [-0.0009949698870352966], [-5.088418342280677e-18], [-5.996281602058984e-19], [-5.996281602058984e-19], [-5.996281602058984e-19], [-5.996281602058984e-19], [-5.088418342280677e-18], [-5.996281602058984e-19], [-5.996281602058984e-19], [-5.088418342280677e-18], [-5.996281602058984e-19], [-5.996281602058984e-19], [-5.996281602058984e-19], [-5.996281602058984e-19], [-5.088418342280677e-18], [-5.996281602058984e-19], [-5.996281602058984e-19], [-5.088418342280677e-18], [-5.996281602058984e-19], [0.000994969887035314], [-0.0017411973023117732], [-0.0014924548305529535], [-0.0014924548305529496], [-0.0014924548305529528], [-0.0014924548305529533], [-0.0014924548305529513], [-0.0014924548305529535], [-0.0014924548305529535], [-0.0014924548305529513], [-0.0014924548305529537], [-0.0014924548305529541], [-0.0014924548305529518], [-0.0014924548305529537], [-0.0014924548305529535], [-0.0014924548305529513], [-0.001492454830552953], [-0.0014924548305529535], [-0.001492454830552951], [-0.0014924548305529535], [-0.001492454830552956]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327991376, "name": "@", "id": 47583058316546960, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6328079456, "name": "Sparse Matrix (60, 61)", "id": 3261379141111690730, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [60, 61], "data": [-199.99999999999997, 199.99999999999997, -199.99999999999997, 199.99999999999997, -199.99999999999994, 199.99999999999994, -200.00000000000003, 200.00000000000003, -200.00000000000003, 200.00000000000003, -199.9999999999999, 199.9999999999999, -200.00000000000003, 200.00000000000003, -200.00000000000003, 200.00000000000003, -200.00000000000003, 200.00000000000003, -200.00000000000003, 200.00000000000003, -200.00000000000003, 200.00000000000003, -199.99999999999974, 199.99999999999974, -200.00000000000003, 200.00000000000003, -200.00000000000003, 200.00000000000003, -200.00000000000003, 200.00000000000003, -200.00000000000003, 200.00000000000003, -200.00000000000003, 200.00000000000003, -200.00000000000003, 200.00000000000003, -200.00000000000003, 200.00000000000003, -200.00000000000003, 200.00000000000003, -799.999999999998, 799.999999999998, -800.0000000000065, 800.0000000000065, -799.999999999998, 799.999999999998, -799.999999999998, 799.999999999998, -799.999999999998, 799.999999999998, -799.999999999998, 799.999999999998, -800.0000000000065, 800.0000000000065, -799.999999999998, 799.999999999998, -799.999999999998, 799.999999999998, -800.0000000000065, 800.0000000000065, -799.999999999998, 799.999999999998, -799.999999999998, 799.999999999998, -799.999999999998, 799.999999999998, -799.999999999998, 799.999999999998, -800.0000000000065, 800.0000000000065, -799.999999999998, 799.999999999998, -799.999999999998, 799.999999999998, -800.0000000000065, 800.0000000000065, -799.999999999998, 799.999999999998, -799.999999999998, 799.999999999998, -199.9999999999995, 199.9999999999995, -200.00000000000057, 200.00000000000057, -200.00000000000057, 200.00000000000057, -199.9999999999995, 199.9999999999995, -199.9999999999995, 199.9999999999995, -200.00000000000057, 200.00000000000057, -200.00000000000057, 200.00000000000057, -199.9999999999995, 199.9999999999995, -199.9999999999995, 199.9999999999995, -200.00000000000057, 200.00000000000057, -200.00000000000057, 200.00000000000057, -199.9999999999995, 199.9999999999995, -199.9999999999995, 199.9999999999995, -200.00000000000057, 200.00000000000057, -200.00000000000057, 200.00000000000057, -199.9999999999995, 199.9999999999995, -199.9999999999995, 199.9999999999995, -200.00000000000057, 200.00000000000057, -200.00000000000057, 200.00000000000057, -199.9999999999995, 199.9999999999995], "row_indices": [0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 41, 42, 42, 43, 43, 44, 44, 45, 45, 46, 46, 47, 47, 48, 48, 49, 49, 50, 50, 51, 51, 52, 52, 53, 53, 54, 54, 55, 55, 56, 56, 57, 57, 58, 58, 59, 59, 60], "column_pointers": [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327980576, "name": "*", "id": 1900231216940991490, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327982400, "name": "+", "id": -615713025060598072, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327860688, "name": "@", "id": 9179221121120763281, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327858480, "name": "Sparse Matrix (61, 60)", "id": -4193489417207721758, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [61, 60], "data": [1.5, -0.5, -0.5, 1.5], "row_indices": [0, 1, 58, 59], "column_pointers": [0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327980480, "name": "*", "id": -8803252842642434814, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327979616, "name": "Column vector of length 60", "id": -6680618729434666705, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11]], "children": []}, {"py/object": "pybamm.expression_tree.functions.Exp", "py/id": 6327979808, "name": "function (exp)", "id": 5969435720222119149, "function": "exp", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327980384, "name": "*", "id": -6203345060342973230, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325514752, "name": "-0.0006500000000000001", "id": 1139189971514934547, "value": -0.0006500000000000001, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327978752, "name": "maximum", "id": 2029531209973455873, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327980816, "name": "@", "id": 1727055484251905453, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327845760, "name": "Sparse Matrix (61, 59)", "id": 5262815232247200030, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [61, 59], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "column_pointers": [0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 59]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6320446816, "name": "/", "id": 6966848708130651008, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327982352, "name": "*", "id": 882986374006883381, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327981104, "name": "@", "id": 3953684046678345669, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327980960, "name": "Sparse Matrix (59, 60)", "id": -6932072405976898819, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [59, 60], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327980480, "name": "*", "id": -8803252842642434814, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327979616, "name": "Column vector of length 60", "id": -6680618729434666705, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11]], "children": []}, {"py/object": "pybamm.expression_tree.functions.Exp", "py/id": 6327979808, "name": "function (exp)", "id": 5969435720222119149, "function": "exp", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327980384, "name": "*", "id": -6203345060342973230, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325514752, "name": "-0.0006500000000000001", "id": 1139189971514934547, "value": -0.0006500000000000001, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327978752, "name": "maximum", "id": 2029531209973455873, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327982064, "name": "@", "id": 6412268756486208508, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327981632, "name": "Sparse Matrix (59, 60)", "id": -882569957383297410, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [59, 60], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327980480, "name": "*", "id": -8803252842642434814, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327979616, "name": "Column vector of length 60", "id": -6680618729434666705, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11]], "children": []}, {"py/object": "pybamm.expression_tree.functions.Exp", "py/id": 6327979808, "name": "function (exp)", "id": 5969435720222119149, "function": "exp", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327980384, "name": "*", "id": -6203345060342973230, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325514752, "name": "-0.0006500000000000001", "id": 1139189971514934547, "value": -0.0006500000000000001, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327978752, "name": "maximum", "id": 2029531209973455873, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327853392, "name": "+", "id": -990328519430722332, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6327662880, "name": "1e-16", "id": 1754062498879626587, "value": 1e-16, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327852048, "name": "@", "id": -3370353930724895898, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327860016, "name": "Sparse Matrix (59, 60)", "id": 7343341199762943255, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [59, 60], "data": [0.5, 0.5, 0.5000000000000001, 0.4999999999999999, 0.4999999999999999, 0.5000000000000001, 0.5, 0.5, 0.5000000000000002, 0.49999999999999983, 0.4999999999999998, 0.5000000000000002, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5000000000000003, 0.49999999999999967, 0.49999999999999967, 0.5000000000000003, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.2000000000000004, 0.7999999999999996, 0.49999999999999734, 0.5000000000000027, 0.5000000000000027, 0.4999999999999973, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.49999999999999734, 0.5000000000000027, 0.5000000000000027, 0.4999999999999973, 0.5, 0.5, 0.49999999999999734, 0.5000000000000027, 0.5000000000000027, 0.4999999999999973, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.49999999999999734, 0.5000000000000027, 0.5000000000000027, 0.4999999999999973, 0.5, 0.5, 0.49999999999999734, 0.5000000000000027, 0.5000000000000027, 0.4999999999999973, 0.5, 0.5, 0.8, 0.2, 0.49999999999999867, 0.5000000000000013, 0.5, 0.5, 0.5000000000000013, 0.49999999999999867, 0.5, 0.5, 0.49999999999999867, 0.5000000000000013, 0.5, 0.5, 0.5000000000000013, 0.49999999999999867, 0.5, 0.5, 0.49999999999999867, 0.5000000000000013, 0.5, 0.5, 0.5000000000000013, 0.49999999999999867, 0.5, 0.5, 0.49999999999999867, 0.5000000000000013, 0.5, 0.5, 0.5000000000000013, 0.49999999999999867, 0.5, 0.5, 0.49999999999999867, 0.5000000000000013, 0.5, 0.5, 0.5000000000000013, 0.49999999999999867], "row_indices": [0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 41, 42, 42, 43, 43, 44, 44, 45, 45, 46, 46, 47, 47, 48, 48, 49, 49, 50, 50, 51, 51, 52, 52, 53, 53, 54, 54, 55, 55, 56, 56, 57, 57, 58, 58, 59], "column_pointers": [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327980480, "name": "*", "id": -8803252842642434814, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327979616, "name": "Column vector of length 60", "id": -6680618729434666705, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-5.34e-10], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11], [-8.77451537123276e-11]], "children": []}, {"py/object": "pybamm.expression_tree.functions.Exp", "py/id": 6327979808, "name": "function (exp)", "id": 5969435720222119149, "function": "exp", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327980384, "name": "*", "id": -6203345060342973230, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325514752, "name": "-0.0006500000000000001", "id": 1139189971514934547, "value": -0.0006500000000000001, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327978752, "name": "maximum", "id": 2029531209973455873, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327981728, "name": "@", "id": -7413729301704214850, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327981248, "name": "Sparse Matrix (61, 60)", "id": 4700143194265760, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [61, 60], "data": [199999.99999999994, -199999.99999999994, 199999.99999999994, -199999.99999999994, 200000.00000000003, -200000.00000000003, 200000.00000000003, -200000.00000000003, 199999.99999999988, -199999.99999999988, 200000.00000000003, -200000.00000000003, 200000.00000000003, -200000.00000000003, 200000.00000000003, -200000.00000000003, 200000.00000000003, -200000.00000000003, 200000.00000000003, -200000.00000000003, 200000.00000000003, -200000.00000000003, 200000.00000000003, -200000.00000000003, 199999.99999999948, -199999.99999999948, 200000.00000000055, -200000.00000000055, 199999.99999999948, -199999.99999999948, 200000.00000000055, -200000.00000000055, 199999.99999999948, -199999.99999999948, 200000.00000000055, -200000.00000000055, 199999.99999999948, -199999.99999999948, 320000.0000000005, -320000.0000000005, 800000.0000000065, -800000.0000000065, 799999.9999999979, -799999.9999999979, 799999.9999999979, -799999.9999999979, 799999.9999999979, -799999.9999999979, 799999.9999999979, -799999.9999999979, 799999.9999999979, -799999.9999999979, 800000.0000000065, -800000.0000000065, 799999.9999999979, -799999.9999999979, 800000.0000000065, -800000.0000000065, 799999.9999999979, -799999.9999999979, 799999.9999999979, -799999.9999999979, 799999.9999999979, -799999.9999999979, 799999.9999999979, -799999.9999999979, 799999.9999999979, -799999.9999999979, 800000.0000000065, -800000.0000000065, 799999.9999999979, -799999.9999999979, 800000.0000000065, -800000.0000000065, 799999.9999999979, -799999.9999999979, 799999.9999999979, -799999.9999999979, 319999.9999999992, -319999.9999999992, 199999.99999999948, -199999.99999999948, 200000.00000000163, -200000.00000000163, 199999.99999999948, -199999.99999999948, 199999.99999999948, -199999.99999999948, 199999.99999999948, -199999.99999999948, 200000.00000000163, -200000.00000000163, 199999.99999999948, -199999.99999999948, 199999.99999999948, -199999.99999999948, 199999.99999999948, -199999.99999999948, 200000.00000000163, -200000.00000000163, 199999.99999999948, -199999.99999999948, 199999.99999999948, -199999.99999999948, 199999.99999999948, -199999.99999999948, 200000.00000000163, -200000.00000000163, 199999.99999999948, -199999.99999999948, 199999.99999999948, -199999.99999999948, 199999.99999999948, -199999.99999999948, 200000.00000000163, -200000.00000000163, 199999.99999999948, -199999.99999999948], "row_indices": [1, 0, 2, 1, 3, 2, 4, 3, 5, 4, 6, 5, 7, 6, 8, 7, 9, 8, 10, 9, 11, 10, 12, 11, 13, 12, 14, 13, 15, 14, 16, 15, 17, 16, 18, 17, 19, 18, 20, 19, 21, 20, 22, 21, 23, 22, 24, 23, 25, 24, 26, 25, 27, 26, 28, 27, 29, 28, 30, 29, 31, 30, 32, 31, 33, 32, 34, 33, 35, 34, 36, 35, 37, 36, 38, 37, 39, 38, 40, 39, 41, 40, 42, 41, 43, 42, 44, 43, 45, 44, 46, 45, 47, 46, 48, 47, 49, 48, 50, 49, 51, 50, 52, 51, 53, 52, 54, 53, 55, 54, 56, 55, 57, 56, 58, 57, 59, 58], "column_pointers": [0, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 118]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327984752, "name": "*", "id": -3961572556955893623, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327984896, "name": "Column vector of length 20", "id": -8794012226802496507, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326850704, "name": "*", "id": -6608787229141046598, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.unary_operators.Negate", "py/id": 6326726208, "name": "-", "id": -8575740431784979443, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326204272, "name": "/", "id": -7995767050945229670, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326599600, "name": "2.8945599636000004e-06", "id": -8176240938359952412, "value": 2.8945599636000004e-06, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326597200, "name": "y[122:142]", "id": -4654073562494662926, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 122, "stop": 142, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.functions.Exp", "py/id": 6326726976, "name": "function (exp)", "id": 5664946884854084312, "function": "exp", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326848544, "name": "-", "id": 802813446367908590, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326724288, "name": "Column vector of length 20", "id": 6949370380014700620, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3.937618094102231e-05], [0.00011513794680222979], [0.0001869122513023211], [0.0002546990944412962], [0.0003184984762191551], [0.00037831039663589793], [0.00043413485569152445], [0.00048597185338603477], [0.000533821389719429], [0.000577683464691707], [0.0006175580783028689], [0.0006534452305529144], [0.0006853449214418439], [0.0007132571509696573], [0.0007371819191363543], [0.0007571192259419353], [0.0007730690713863999], [0.0007850314554697486], [0.0007930063781919808], [0.0007969938395530971]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326850272, "name": "-", "id": -5169445016212977198, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326849888, "name": "-", "id": 641364474574074541, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326849168, "name": "+", "id": 3987160593828614159, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326849024, "name": "@", "id": -6542898431559840529, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326849216, "name": "Column vector of length 20", "id": 3722985615507650919, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [-38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326960048, "name": "-", "id": 8166320490570836002, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326957024, "name": "-", "id": -1426400927845783288, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326953280, "name": "+", "id": -87681102096113063, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326953136, "name": "Column vector of length 1", "id": 7498350506610149221, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "entries": [[-1.3664024208854978e-05]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326952128, "name": "-", "id": -3553484892908894406, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326728224, "name": "+", "id": -8293531578467133416, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326716848, "name": "@", "id": -7897331072600810934, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326716944, "name": "Sparse Matrix (1, 20)", "id": 2554937835408777545, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-6.666666666666666e-05, -6.666666666666666e-05, -6.666666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.66666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666674e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326724192, "name": "y[102:122]", "id": 5822907568351388675, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 102, "stop": 122, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326717088, "name": "@", "id": 2408778673299547818, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326728320, "name": "Sparse Matrix (1, 20)", "id": 2554937835408777545, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-6.666666666666666e-05, -6.666666666666666e-05, -6.666666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.66666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666674e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326597200, "name": "y[122:142]", "id": -4654073562494662926, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 122, "stop": 142, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951984, "name": "+", "id": -6068800631112939481, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944880, "name": "@", "id": 4277053689203630480, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326944688, "name": "Sparse Matrix (1, 20)", "id": -2763416208417960285, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0025692579121493727, 0.0025692579121493727, 0.002569257912149373, 0.0025692579121493727, 0.0025692579121493727, 0.002569257912149374, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493757, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Arcsinh", "py/id": 6326729184, "name": "function (arcsinh)", "id": 5781459614506051753, "function": "arcsinh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326726304, "name": "/", "id": 2429643751737650172, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325475936, "name": "0.6666666666666666", "id": -4601659744691921001, "value": 0.6666666666666666, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326599552, "name": "*", "id": -2432302278190366528, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326722944, "name": "*", "id": 7382909411869586226, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730288, "name": "*", "id": 3479221902762568791, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325472720, "name": "2e-05", "id": -416325789226925075, "value": 2e-05, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326730144, "name": "**", "id": -3866013196173468146, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326729472, "name": "maximum", "id": -38866897276748842, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324524848, "name": "1e-08", "id": 2248593343453076709, "value": 1e-08, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326715984, "name": "@", "id": -381515773720244289, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326730096, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326729856, "name": "**", "id": -1868943510485275387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326730432, "name": "maximum", "id": -4830756954153364032, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326730480, "name": "minimum", "id": -7371976683556488613, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326729712, "name": "@", "id": -7947777665951828331, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326717136, "name": "Sparse Matrix (1, 20)", "id": -1311178267164410342, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-12491.630996921805, 37474.892990765504], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195968, "name": "24983.261744011077", "id": -173151486002828470, "value": 24983.261744011077, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195008, "name": "0.000249832619938437", "id": 5018604233361534579, "value": 0.000249832619938437, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6215798272, "name": "@", "id": -2607619662398425646, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326719632, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326724432, "name": "**", "id": 8840658232720572223, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326723184, "name": "-", "id": 2338145762588095178, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325193376, "name": "Maximum concentration in negative electrode [mol.m-3]", "id": -4006365182696779717, "value": 24983.2619938437, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326730432, "name": "maximum", "id": -4830756954153364032, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326730480, "name": "minimum", "id": -7371976683556488613, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326729712, "name": "@", "id": -7947777665951828331, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326717136, "name": "Sparse Matrix (1, 20)", "id": -1311178267164410342, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-12491.630996921805, 37474.892990765504], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195968, "name": "24983.261744011077", "id": -173151486002828470, "value": 24983.261744011077, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195008, "name": "0.000249832619938437", "id": 5018604233361534579, "value": 0.000249832619938437, "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951840, "name": "+", "id": 2221407163864304667, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950976, "name": "+", "id": -2960133066485095630, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326950352, "name": "-", "id": -9139240763802421065, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326949776, "name": "-", "id": -380020215870947602, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326949104, "name": "-", "id": -8985395728359068257, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326948432, "name": "-", "id": -8728344082884186819, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326947808, "name": "-", "id": -824067711031895542, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326947184, "name": "-", "id": -4998106132020497923, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946560, "name": "+", "id": 7528121021614073017, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326945888, "name": "+", "id": 5359849752092524006, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477856, "name": "0.194", "id": 4251029814298257343, "value": 0.194, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326945744, "name": "*", "id": 7639587925667497463, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477568, "name": "1.5", "id": -1860591468980405701, "value": 1.5, "children": []}, {"py/object": "pybamm.expression_tree.functions.Exp", "py/id": 6326944208, "name": "function (exp)", "id": 3180788988723656329, "function": "exp", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326945648, "name": "*", "id": -37345490762490615, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477136, "name": "-120.0", "id": -2425182868076845414, "value": -120.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946416, "name": "*", "id": 7099450262039018463, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478624, "name": "0.0351", "id": -161632893335429177, "value": 0.0351, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326945552, "name": "function (tanh)", "id": 8454667870790248030, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946224, "name": "+", "id": 7942467795480504387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478960, "name": "-3.44578313253012", "id": 8444925721582764742, "value": -3.44578313253012, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946080, "name": "*", "id": 8381823886301776259, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478720, "name": "12.048192771084336", "id": 8097125027648466415, "value": 12.048192771084336, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947040, "name": "*", "id": 2048096631300921014, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478576, "name": "0.0045", "id": -2981038650488801168, "value": 0.0045, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326945984, "name": "function (tanh)", "id": -1623400745941997014, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946848, "name": "+", "id": -2416178302035251812, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480208, "name": "-7.1344537815126055", "id": 1460317602928865068, "value": -7.1344537815126055, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946752, "name": "*", "id": -851868951156677450, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480016, "name": "8.403361344537815", "id": 1404623847793106708, "value": 8.403361344537815, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947664, "name": "*", "id": -4019228816394572527, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480736, "name": "0.035", "id": 6162767455658282703, "value": 0.035, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326946656, "name": "function (tanh)", "id": -1150884761896753166, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326947520, "name": "+", "id": 7644935680070045406, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325481552, "name": "-18.466", "id": -373623245734958046, "value": -18.466, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947376, "name": "*", "id": 5731199625910651132, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325481264, "name": "20.0", "id": -4340446481305119942, "value": 20.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948288, "name": "*", "id": -8398586198298319237, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325482944, "name": "0.0147", "id": 3513533554870653346, "value": 0.0147, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326946944, "name": "function (tanh)", "id": 6946148157129530496, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326948096, "name": "+", "id": 3779098074371246036, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325483136, "name": "-14.705882352941176", "id": -5925813036394720848, "value": -14.705882352941176, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947952, "name": "*", "id": -2391216548457030335, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325482800, "name": "29.41176470588235", "id": -1937713174565683752, "value": 29.41176470588235, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948960, "name": "*", "id": -6309866705551813062, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325313968, "name": "0.102", "id": -3729995203387465972, "value": 0.102, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326947856, "name": "function (tanh)", "id": -4550779299409160821, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326948768, "name": "+", "id": 1480749490317416490, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325198608, "name": "-1.3661971830985917", "id": -8384546222245432196, "value": -1.3661971830985917, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948624, "name": "*", "id": 3728936636961048916, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484672, "name": "7.042253521126761", "id": 6960204674628031657, "value": 7.042253521126761, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949632, "name": "*", "id": 4649296532770888742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484336, "name": "0.022", "id": -1950766998167305555, "value": 0.022, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326948528, "name": "function (tanh)", "id": 1577914864793947784, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326949440, "name": "+", "id": -9088454947200883348, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484288, "name": "-54.8780487804878", "id": 7787322731592813793, "value": -54.8780487804878, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949296, "name": "*", "id": -1686636676232609815, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484144, "name": "60.975609756097555", "id": -65658111227441629, "value": 60.975609756097555, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950208, "name": "*", "id": 7119747142001126644, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480688, "name": "0.011", "id": 2677758333144557655, "value": 0.011, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326949200, "name": "function (tanh)", "id": 1097948657258569153, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950064, "name": "+", "id": 6534944802070438685, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325479440, "name": "-5.486725663716814", "id": 6197169621668094767, "value": -5.486725663716814, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949920, "name": "*", "id": -4763378136876713897, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325479968, "name": "44.24778761061947", "id": -6493965988769950205, "value": 44.24778761061947, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950832, "name": "*", "id": -6669455122115546387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477472, "name": "0.0155", "id": -2650083987933338625, "value": 0.0155, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326949536, "name": "function (tanh)", "id": 206273733215490184, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950688, "name": "+", "id": -2889338946402326512, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325474976, "name": "-3.6206896551724133", "id": -1794731523492796600, "value": -3.6206896551724133, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950544, "name": "*", "id": 6284796480753054853, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325476656, "name": "34.48275862068965", "id": -2390830538731112535, "value": 34.48275862068965, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326951696, "name": "*", "id": -6493752423506966711, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324528208, "name": "1e-06", "id": -3069320665520676574, "value": 1e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951552, "name": "+", "id": -6741445237676707870, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326950448, "name": "/", "id": 4057728519080426641, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326951120, "name": "/", "id": -3310090966227999806, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951264, "name": "+", "id": -6773688724399837147, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324527776, "name": "-1.0", "id": -8456763896046725936, "value": -1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326956928, "name": "@", "id": 8483904739322685359, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326957120, "name": "Sparse Matrix (1, 20)", "id": 1038870521767603098, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0015415547472896235, 0.0015415547472896235, 0.0015415547472896237, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896244, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896255, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Log", "py/id": 6326954288, "name": "function (log)", "id": -5030701221925340772, "function": "log", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326955536, "name": "maximum", "id": 4171024460717429445, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326955632, "name": "/", "id": -1900829629222783454, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955728, "name": "@", "id": -7873392624484173844, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955584, "name": "Sparse Matrix (20, 60)", "id": 8094614243801919291, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 60], "data": [0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223], "row_indices": [59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], "column_pointers": [0, 60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 660, 720, 780, 840, 900, 960, 1020, 1080, 1140, 1200]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324847536, "name": "1e-15", "id": -8705571835474137486, "value": 1e-15, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959904, "name": "*", "id": -4123933597739443935, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325509184, "name": "0.0024", "id": 6559832735740966387, "value": 0.0024, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959760, "name": "-", "id": 3029823735963637756, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326957456, "name": "/", "id": -5357639576507355315, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324849120, "name": "0.3333333333333333", "id": -5701793740805269720, "value": 0.3333333333333333, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958512, "name": "+", "id": 284263368525210904, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326958128, "name": "-", "id": 543545805456541861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326957696, "name": "+", "id": -7842655593740600439, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658224, "name": "0.014969257496616187", "id": -8353597445683247701, "value": 0.014969257496616187, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957552, "name": "*", "id": 4960491804341474864, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658512, "name": "0.00031386145712718525", "id": 3507164062337076, "value": 0.00031386145712718525, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957984, "name": "*", "id": 7112391073554976339, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658848, "name": "1.728612391486304e-07", "id": 4207388108385797869, "value": 1.728612391486304e-07, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958368, "name": "*", "id": 7749610267777311295, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325659232, "name": "2.5534825630890845e-11", "id": -5879707510941530913, "value": 2.5534825630890845e-11, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326958656, "name": "/", "id": 6855516544202313701, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326959472, "name": "+", "id": 8012764929235198493, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959184, "name": "-", "id": -2208441102872370140, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958896, "name": "+", "id": 2767688668933281379, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325471616, "name": "0.0911", "id": -1599851476179082992, "value": 0.0911, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958752, "name": "*", "id": 6881685191875661397, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484000, "name": "0.0019100999999999999", "id": -3779973321848982182, "value": 0.0019100999999999999, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959040, "name": "*", "id": -5173557815052613389, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325654528, "name": "1.052e-06", "id": -480156392906839787, "value": 1.052e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959328, "name": "*", "id": -9177911052441474098, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325652992, "name": "1.5540000000000003e-10", "id": -3428780814341171134, "value": 1.5540000000000003e-10, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326849552, "name": "*", "id": -6995040819281715622, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326849600, "name": "-1.2", "id": -123352467632268870, "value": -1.2, "children": []}, {"py/object": "pybamm.expression_tree.functions.Log", "py/id": 6326954288, "name": "function (log)", "id": -5030701221925340772, "function": "log", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326955536, "name": "maximum", "id": 4171024460717429445, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326955632, "name": "/", "id": -1900829629222783454, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955728, "name": "@", "id": -7873392624484173844, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955584, "name": "Sparse Matrix (20, 60)", "id": 8094614243801919291, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 60], "data": [0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223], "row_indices": [59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], "column_pointers": [0, 60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 660, 720, 780, 840, 900, 960, 1020, 1080, 1140, 1200]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324847536, "name": "1e-15", "id": -8705571835474137486, "value": 1e-15, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326849792, "name": "@", "id": 2308556946058720264, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326849984, "name": "Column vector of length 20", "id": 1795703229770559650, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [0.0019448709202649678, 0.0019351404841410657, 0.0019156796118932609, 0.0018864883035215542, 0.001847566559025945, 0.0017989143784064333, 0.00174053176166302, 0.0016724187087957042, 0.001594575219804486, 0.0015070012946893651, 0.0014096969334503426, 0.0013026621360874174, 0.0011858969026005903, 0.0010594012329898602, 0.0009231751272552286, 0.0007772185853966941, 0.000621531607414258, 0.00045611419330791875, 0.00028096634307767847, 9.60880567235345e-05], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326845712, "name": "/", "id": 2000317851754806712, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305760, "name": "23.999999999999996", "id": -1312225410768614328, "value": 23.999999999999996, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958512, "name": "+", "id": 284263368525210904, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326958128, "name": "-", "id": 543545805456541861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326957696, "name": "+", "id": -7842655593740600439, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658224, "name": "0.014969257496616187", "id": -8353597445683247701, "value": 0.014969257496616187, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957552, "name": "*", "id": 4960491804341474864, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658512, "name": "0.00031386145712718525", "id": 3507164062337076, "value": 0.00031386145712718525, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957984, "name": "*", "id": 7112391073554976339, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658848, "name": "1.728612391486304e-07", "id": 4207388108385797869, "value": 1.728612391486304e-07, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958368, "name": "*", "id": 7749610267777311295, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325659232, "name": "2.5534825630890845e-11", "id": -5879707510941530913, "value": 2.5534825630890845e-11, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326849936, "name": "@", "id": -4409303643562634318, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326850368, "name": "Column vector of length 20", "id": 3722985615507650919, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [-38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326846912, "name": "/", "id": -2809714310914432611, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325509184, "name": "0.0024", "id": 6559832735740966387, "value": 0.0024, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326959472, "name": "+", "id": 8012764929235198493, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959184, "name": "-", "id": -2208441102872370140, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958896, "name": "+", "id": 2767688668933281379, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325471616, "name": "0.0911", "id": -1599851476179082992, "value": 0.0911, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958752, "name": "*", "id": 6881685191875661397, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484000, "name": "0.0019100999999999999", "id": -3779973321848982182, "value": 0.0019100999999999999, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959040, "name": "*", "id": -5173557815052613389, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325654528, "name": "1.052e-06", "id": -480156392906839787, "value": 1.052e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959328, "name": "*", "id": -9177911052441474098, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325652992, "name": "1.5540000000000003e-10", "id": -3428780814341171134, "value": 1.5540000000000003e-10, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327983264, "name": "*", "id": -3961572556955893623, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327983504, "name": "Column vector of length 20", "id": -8794012226802496507, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046], [-0.04967076232934046]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326850704, "name": "*", "id": -6608787229141046598, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.unary_operators.Negate", "py/id": 6326726208, "name": "-", "id": -8575740431784979443, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326204272, "name": "/", "id": -7995767050945229670, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326599600, "name": "2.8945599636000004e-06", "id": -8176240938359952412, "value": 2.8945599636000004e-06, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326597200, "name": "y[122:142]", "id": -4654073562494662926, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 122, "stop": 142, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.functions.Exp", "py/id": 6326726976, "name": "function (exp)", "id": 5664946884854084312, "function": "exp", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326848544, "name": "-", "id": 802813446367908590, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326724288, "name": "Column vector of length 20", "id": 6949370380014700620, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3.937618094102231e-05], [0.00011513794680222979], [0.0001869122513023211], [0.0002546990944412962], [0.0003184984762191551], [0.00037831039663589793], [0.00043413485569152445], [0.00048597185338603477], [0.000533821389719429], [0.000577683464691707], [0.0006175580783028689], [0.0006534452305529144], [0.0006853449214418439], [0.0007132571509696573], [0.0007371819191363543], [0.0007571192259419353], [0.0007730690713863999], [0.0007850314554697486], [0.0007930063781919808], [0.0007969938395530971]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326850272, "name": "-", "id": -5169445016212977198, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326849888, "name": "-", "id": 641364474574074541, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326849168, "name": "+", "id": 3987160593828614159, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326849024, "name": "@", "id": -6542898431559840529, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326849216, "name": "Column vector of length 20", "id": 3722985615507650919, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [-38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326960048, "name": "-", "id": 8166320490570836002, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326957024, "name": "-", "id": -1426400927845783288, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326953280, "name": "+", "id": -87681102096113063, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326953136, "name": "Column vector of length 1", "id": 7498350506610149221, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "entries": [[-1.3664024208854978e-05]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326952128, "name": "-", "id": -3553484892908894406, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326728224, "name": "+", "id": -8293531578467133416, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326716848, "name": "@", "id": -7897331072600810934, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326716944, "name": "Sparse Matrix (1, 20)", "id": 2554937835408777545, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-6.666666666666666e-05, -6.666666666666666e-05, -6.666666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.66666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666674e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326724192, "name": "y[102:122]", "id": 5822907568351388675, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 102, "stop": 122, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326717088, "name": "@", "id": 2408778673299547818, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326728320, "name": "Sparse Matrix (1, 20)", "id": 2554937835408777545, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-6.666666666666666e-05, -6.666666666666666e-05, -6.666666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.66666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666674e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326597200, "name": "y[122:142]", "id": -4654073562494662926, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 122, "stop": 142, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951984, "name": "+", "id": -6068800631112939481, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944880, "name": "@", "id": 4277053689203630480, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326944688, "name": "Sparse Matrix (1, 20)", "id": -2763416208417960285, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0025692579121493727, 0.0025692579121493727, 0.002569257912149373, 0.0025692579121493727, 0.0025692579121493727, 0.002569257912149374, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493757, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Arcsinh", "py/id": 6326729184, "name": "function (arcsinh)", "id": 5781459614506051753, "function": "arcsinh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326726304, "name": "/", "id": 2429643751737650172, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325475936, "name": "0.6666666666666666", "id": -4601659744691921001, "value": 0.6666666666666666, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326599552, "name": "*", "id": -2432302278190366528, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326722944, "name": "*", "id": 7382909411869586226, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730288, "name": "*", "id": 3479221902762568791, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325472720, "name": "2e-05", "id": -416325789226925075, "value": 2e-05, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326730144, "name": "**", "id": -3866013196173468146, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326729472, "name": "maximum", "id": -38866897276748842, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324524848, "name": "1e-08", "id": 2248593343453076709, "value": 1e-08, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326715984, "name": "@", "id": -381515773720244289, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326730096, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326729856, "name": "**", "id": -1868943510485275387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326730432, "name": "maximum", "id": -4830756954153364032, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326730480, "name": "minimum", "id": -7371976683556488613, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326729712, "name": "@", "id": -7947777665951828331, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326717136, "name": "Sparse Matrix (1, 20)", "id": -1311178267164410342, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-12491.630996921805, 37474.892990765504], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195968, "name": "24983.261744011077", "id": -173151486002828470, "value": 24983.261744011077, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195008, "name": "0.000249832619938437", "id": 5018604233361534579, "value": 0.000249832619938437, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6215798272, "name": "@", "id": -2607619662398425646, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326719632, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326724432, "name": "**", "id": 8840658232720572223, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326723184, "name": "-", "id": 2338145762588095178, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325193376, "name": "Maximum concentration in negative electrode [mol.m-3]", "id": -4006365182696779717, "value": 24983.2619938437, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326730432, "name": "maximum", "id": -4830756954153364032, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326730480, "name": "minimum", "id": -7371976683556488613, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326729712, "name": "@", "id": -7947777665951828331, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326717136, "name": "Sparse Matrix (1, 20)", "id": -1311178267164410342, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-12491.630996921805, 37474.892990765504], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195968, "name": "24983.261744011077", "id": -173151486002828470, "value": 24983.261744011077, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195008, "name": "0.000249832619938437", "id": 5018604233361534579, "value": 0.000249832619938437, "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951840, "name": "+", "id": 2221407163864304667, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950976, "name": "+", "id": -2960133066485095630, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326950352, "name": "-", "id": -9139240763802421065, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326949776, "name": "-", "id": -380020215870947602, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326949104, "name": "-", "id": -8985395728359068257, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326948432, "name": "-", "id": -8728344082884186819, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326947808, "name": "-", "id": -824067711031895542, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326947184, "name": "-", "id": -4998106132020497923, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946560, "name": "+", "id": 7528121021614073017, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326945888, "name": "+", "id": 5359849752092524006, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477856, "name": "0.194", "id": 4251029814298257343, "value": 0.194, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326945744, "name": "*", "id": 7639587925667497463, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477568, "name": "1.5", "id": -1860591468980405701, "value": 1.5, "children": []}, {"py/object": "pybamm.expression_tree.functions.Exp", "py/id": 6326944208, "name": "function (exp)", "id": 3180788988723656329, "function": "exp", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326945648, "name": "*", "id": -37345490762490615, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477136, "name": "-120.0", "id": -2425182868076845414, "value": -120.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946416, "name": "*", "id": 7099450262039018463, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478624, "name": "0.0351", "id": -161632893335429177, "value": 0.0351, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326945552, "name": "function (tanh)", "id": 8454667870790248030, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946224, "name": "+", "id": 7942467795480504387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478960, "name": "-3.44578313253012", "id": 8444925721582764742, "value": -3.44578313253012, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946080, "name": "*", "id": 8381823886301776259, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478720, "name": "12.048192771084336", "id": 8097125027648466415, "value": 12.048192771084336, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947040, "name": "*", "id": 2048096631300921014, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478576, "name": "0.0045", "id": -2981038650488801168, "value": 0.0045, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326945984, "name": "function (tanh)", "id": -1623400745941997014, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946848, "name": "+", "id": -2416178302035251812, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480208, "name": "-7.1344537815126055", "id": 1460317602928865068, "value": -7.1344537815126055, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946752, "name": "*", "id": -851868951156677450, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480016, "name": "8.403361344537815", "id": 1404623847793106708, "value": 8.403361344537815, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947664, "name": "*", "id": -4019228816394572527, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480736, "name": "0.035", "id": 6162767455658282703, "value": 0.035, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326946656, "name": "function (tanh)", "id": -1150884761896753166, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326947520, "name": "+", "id": 7644935680070045406, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325481552, "name": "-18.466", "id": -373623245734958046, "value": -18.466, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947376, "name": "*", "id": 5731199625910651132, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325481264, "name": "20.0", "id": -4340446481305119942, "value": 20.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948288, "name": "*", "id": -8398586198298319237, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325482944, "name": "0.0147", "id": 3513533554870653346, "value": 0.0147, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326946944, "name": "function (tanh)", "id": 6946148157129530496, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326948096, "name": "+", "id": 3779098074371246036, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325483136, "name": "-14.705882352941176", "id": -5925813036394720848, "value": -14.705882352941176, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947952, "name": "*", "id": -2391216548457030335, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325482800, "name": "29.41176470588235", "id": -1937713174565683752, "value": 29.41176470588235, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948960, "name": "*", "id": -6309866705551813062, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325313968, "name": "0.102", "id": -3729995203387465972, "value": 0.102, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326947856, "name": "function (tanh)", "id": -4550779299409160821, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326948768, "name": "+", "id": 1480749490317416490, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325198608, "name": "-1.3661971830985917", "id": -8384546222245432196, "value": -1.3661971830985917, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948624, "name": "*", "id": 3728936636961048916, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484672, "name": "7.042253521126761", "id": 6960204674628031657, "value": 7.042253521126761, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949632, "name": "*", "id": 4649296532770888742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484336, "name": "0.022", "id": -1950766998167305555, "value": 0.022, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326948528, "name": "function (tanh)", "id": 1577914864793947784, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326949440, "name": "+", "id": -9088454947200883348, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484288, "name": "-54.8780487804878", "id": 7787322731592813793, "value": -54.8780487804878, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949296, "name": "*", "id": -1686636676232609815, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484144, "name": "60.975609756097555", "id": -65658111227441629, "value": 60.975609756097555, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950208, "name": "*", "id": 7119747142001126644, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480688, "name": "0.011", "id": 2677758333144557655, "value": 0.011, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326949200, "name": "function (tanh)", "id": 1097948657258569153, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950064, "name": "+", "id": 6534944802070438685, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325479440, "name": "-5.486725663716814", "id": 6197169621668094767, "value": -5.486725663716814, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949920, "name": "*", "id": -4763378136876713897, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325479968, "name": "44.24778761061947", "id": -6493965988769950205, "value": 44.24778761061947, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950832, "name": "*", "id": -6669455122115546387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477472, "name": "0.0155", "id": -2650083987933338625, "value": 0.0155, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326949536, "name": "function (tanh)", "id": 206273733215490184, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950688, "name": "+", "id": -2889338946402326512, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325474976, "name": "-3.6206896551724133", "id": -1794731523492796600, "value": -3.6206896551724133, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950544, "name": "*", "id": 6284796480753054853, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325476656, "name": "34.48275862068965", "id": -2390830538731112535, "value": 34.48275862068965, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326951696, "name": "*", "id": -6493752423506966711, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324528208, "name": "1e-06", "id": -3069320665520676574, "value": 1e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951552, "name": "+", "id": -6741445237676707870, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326950448, "name": "/", "id": 4057728519080426641, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326951120, "name": "/", "id": -3310090966227999806, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951264, "name": "+", "id": -6773688724399837147, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324527776, "name": "-1.0", "id": -8456763896046725936, "value": -1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326956928, "name": "@", "id": 8483904739322685359, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326957120, "name": "Sparse Matrix (1, 20)", "id": 1038870521767603098, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0015415547472896235, 0.0015415547472896235, 0.0015415547472896237, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896244, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896255, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Log", "py/id": 6326954288, "name": "function (log)", "id": -5030701221925340772, "function": "log", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326955536, "name": "maximum", "id": 4171024460717429445, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326955632, "name": "/", "id": -1900829629222783454, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955728, "name": "@", "id": -7873392624484173844, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955584, "name": "Sparse Matrix (20, 60)", "id": 8094614243801919291, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 60], "data": [0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223], "row_indices": [59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], "column_pointers": [0, 60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 660, 720, 780, 840, 900, 960, 1020, 1080, 1140, 1200]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324847536, "name": "1e-15", "id": -8705571835474137486, "value": 1e-15, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959904, "name": "*", "id": -4123933597739443935, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325509184, "name": "0.0024", "id": 6559832735740966387, "value": 0.0024, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959760, "name": "-", "id": 3029823735963637756, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326957456, "name": "/", "id": -5357639576507355315, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324849120, "name": "0.3333333333333333", "id": -5701793740805269720, "value": 0.3333333333333333, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958512, "name": "+", "id": 284263368525210904, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326958128, "name": "-", "id": 543545805456541861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326957696, "name": "+", "id": -7842655593740600439, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658224, "name": "0.014969257496616187", "id": -8353597445683247701, "value": 0.014969257496616187, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957552, "name": "*", "id": 4960491804341474864, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658512, "name": "0.00031386145712718525", "id": 3507164062337076, "value": 0.00031386145712718525, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957984, "name": "*", "id": 7112391073554976339, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658848, "name": "1.728612391486304e-07", "id": 4207388108385797869, "value": 1.728612391486304e-07, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958368, "name": "*", "id": 7749610267777311295, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325659232, "name": "2.5534825630890845e-11", "id": -5879707510941530913, "value": 2.5534825630890845e-11, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326958656, "name": "/", "id": 6855516544202313701, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326959472, "name": "+", "id": 8012764929235198493, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959184, "name": "-", "id": -2208441102872370140, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958896, "name": "+", "id": 2767688668933281379, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325471616, "name": "0.0911", "id": -1599851476179082992, "value": 0.0911, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958752, "name": "*", "id": 6881685191875661397, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484000, "name": "0.0019100999999999999", "id": -3779973321848982182, "value": 0.0019100999999999999, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959040, "name": "*", "id": -5173557815052613389, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325654528, "name": "1.052e-06", "id": -480156392906839787, "value": 1.052e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959328, "name": "*", "id": -9177911052441474098, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325652992, "name": "1.5540000000000003e-10", "id": -3428780814341171134, "value": 1.5540000000000003e-10, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326849552, "name": "*", "id": -6995040819281715622, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326849600, "name": "-1.2", "id": -123352467632268870, "value": -1.2, "children": []}, {"py/object": "pybamm.expression_tree.functions.Log", "py/id": 6326954288, "name": "function (log)", "id": -5030701221925340772, "function": "log", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326955536, "name": "maximum", "id": 4171024460717429445, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326955632, "name": "/", "id": -1900829629222783454, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955728, "name": "@", "id": -7873392624484173844, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955584, "name": "Sparse Matrix (20, 60)", "id": 8094614243801919291, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 60], "data": [0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223], "row_indices": [59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], "column_pointers": [0, 60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 660, 720, 780, 840, 900, 960, 1020, 1080, 1140, 1200]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324847536, "name": "1e-15", "id": -8705571835474137486, "value": 1e-15, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326849792, "name": "@", "id": 2308556946058720264, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326849984, "name": "Column vector of length 20", "id": 1795703229770559650, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [0.0019448709202649678, 0.0019351404841410657, 0.0019156796118932609, 0.0018864883035215542, 0.001847566559025945, 0.0017989143784064333, 0.00174053176166302, 0.0016724187087957042, 0.001594575219804486, 0.0015070012946893651, 0.0014096969334503426, 0.0013026621360874174, 0.0011858969026005903, 0.0010594012329898602, 0.0009231751272552286, 0.0007772185853966941, 0.000621531607414258, 0.00045611419330791875, 0.00028096634307767847, 9.60880567235345e-05], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326845712, "name": "/", "id": 2000317851754806712, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305760, "name": "23.999999999999996", "id": -1312225410768614328, "value": 23.999999999999996, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958512, "name": "+", "id": 284263368525210904, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326958128, "name": "-", "id": 543545805456541861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326957696, "name": "+", "id": -7842655593740600439, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658224, "name": "0.014969257496616187", "id": -8353597445683247701, "value": 0.014969257496616187, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957552, "name": "*", "id": 4960491804341474864, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658512, "name": "0.00031386145712718525", "id": 3507164062337076, "value": 0.00031386145712718525, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957984, "name": "*", "id": 7112391073554976339, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658848, "name": "1.728612391486304e-07", "id": 4207388108385797869, "value": 1.728612391486304e-07, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958368, "name": "*", "id": 7749610267777311295, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325659232, "name": "2.5534825630890845e-11", "id": -5879707510941530913, "value": 2.5534825630890845e-11, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326849936, "name": "@", "id": -4409303643562634318, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326850368, "name": "Column vector of length 20", "id": 3722985615507650919, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [-38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911, -38.92174449560911], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326846912, "name": "/", "id": -2809714310914432611, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325509184, "name": "0.0024", "id": 6559832735740966387, "value": 0.0024, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326959472, "name": "+", "id": 8012764929235198493, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959184, "name": "-", "id": -2208441102872370140, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958896, "name": "+", "id": 2767688668933281379, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325471616, "name": "0.0911", "id": -1599851476179082992, "value": 0.0911, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958752, "name": "*", "id": 6881685191875661397, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484000, "name": "0.0019100999999999999", "id": -3779973321848982182, "value": 0.0019100999999999999, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959040, "name": "*", "id": -5173557815052613389, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325654528, "name": "1.052e-06", "id": -480156392906839787, "value": 1.052e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959328, "name": "*", "id": -9177911052441474098, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325652992, "name": "1.5540000000000003e-10", "id": -3428780814341171134, "value": 1.5540000000000003e-10, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}]}]}]}]}]}, "concatenated_algebraic": {"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327989744, "name": "Column vector of length 0", "id": 7142323536246096951, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": [], "children": []}, "concatenated_initial_conditions": {"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326852240, "name": "Column vector of length 142", "id": -4792995094397562832, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": [[0.0], [0.0], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.8000000000000016], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.6000000000000001], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [1.0], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.3], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5], [0.5]], "children": []}, "events": [{"py/object": "pybamm.models.event.Event", "py/id": 6327984416, "name": "Minimum voltage [V]", "event_type": ["EventType.TERMINATION", 0], "expression": {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327980000, "name": "+", "id": 1545054325471003023, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327984080, "name": "Column vector of length 1", "id": 7226374474122387802, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[-3.105921649318005]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327978272, "name": "@", "id": 6784395123585641641, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327978224, "name": "Column vector of length 1", "id": 8974974551673498401, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 1], "data": [1.0], "row_indices": [0], "column_pointers": [0, 1]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327548960, "name": "+", "id": 2047164259306671834, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325968896, "name": "0.0007854359432768872", "id": 9043761854608558187, "value": 0.0007854359432768872, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327548816, "name": "+", "id": 6932362662972156975, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327543248, "name": "+", "id": 4840300324861772786, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327541136, "name": "@", "id": -2709079084813101903, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327542048, "name": "Sparse Matrix (1, 20)", "id": 3368198892565785478, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379, 0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379, 0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379, 0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379, 0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Arcsinh", "py/id": 6327178864, "name": "function (arcsinh)", "id": 7762713935640245493, "function": "arcsinh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6327545264, "name": "/", "id": 4944969372638363630, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325879680, "name": "-0.7999999999999998", "id": -3710793542993154521, "value": -0.7999999999999998, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327543824, "name": "*", "id": 4361800515267115836, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327179248, "name": "*", "id": -1491280552144432845, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327542192, "name": "*", "id": 5229285744879996886, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325761760, "name": "6e-07", "id": -6590763337784132718, "value": 6e-07, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6327541904, "name": "**", "id": 4795026116698599361, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327541760, "name": "maximum", "id": 4201724619927351633, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326848880, "name": "*", "id": -1024443419409141381, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326852048, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326950160, "name": "y[82:102]", "id": 5004984274525037322, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 82, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324524848, "name": "1e-08", "id": 2248593343453076709, "value": 1e-08, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327543008, "name": "@", "id": -1517419550502331233, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327182464, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6327542624, "name": "**", "id": -8861031940181067515, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327542384, "name": "maximum", "id": -6537165250718408597, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327541472, "name": "minimum", "id": -3458429554634586861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 5717422352, "name": "@", "id": 7895283603065353686, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5717029328, "name": "Sparse Matrix (1, 20)", "id": 7679991478818445457, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-25608.96286546366, 76826.88859639116], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760032, "name": "51217.92521874824", "id": 7356165989114971861, "value": 51217.92521874824, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760224, "name": "0.000512179257309275", "id": 5257926711616135225, "value": 0.000512179257309275, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327543728, "name": "@", "id": -6047761952718693602, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327542960, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6327543296, "name": "**", "id": 3295831492052380392, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327543152, "name": "-", "id": -1561935877243134980, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325206192, "name": "Maximum concentration in positive electrode [mol.m-3]", "id": 3383638487514802611, "value": 51217.9257309275, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327542384, "name": "maximum", "id": -6537165250718408597, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327541472, "name": "minimum", "id": -3458429554634586861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 5717422352, "name": "@", "id": 7895283603065353686, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5717029328, "name": "Sparse Matrix (1, 20)", "id": 7679991478818445457, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-25608.96286546366, 76826.88859639116], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760032, "name": "51217.92521874824", "id": 7356165989114971861, "value": 51217.92521874824, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760224, "name": "0.000512179257309275", "id": 5257926711616135225, "value": 0.000512179257309275, "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327411456, "name": "+", "id": -8542356934082764471, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327410640, "name": "-", "id": -5881486871864474767, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327403968, "name": "+", "id": 168258033325559907, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327406464, "name": "+", "id": 5410227661158463177, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327409296, "name": "-", "id": -3873191716778206204, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327346928, "name": "+", "id": 1646407663188186445, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327349952, "name": "+", "id": 4576194534802704835, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325882224, "name": "2.16216", "id": -6538175388565902983, "value": 2.16216, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327350384, "name": "*", "id": 6489020822145545842, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325881936, "name": "0.07645", "id": -5342533196016870602, "value": 0.07645, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327353072, "name": "function (tanh)", "id": 2765804916049038233, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327350960, "name": "-", "id": 5417692422309938819, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325881360, "name": "30.834", "id": 3553451709505253030, "value": 30.834, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327351440, "name": "*", "id": -7833679857076767803, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325881600, "name": "57.858397200000006", "id": 262757461604605267, "value": 57.858397200000006, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327344384, "name": "*", "id": 5855291803804478793, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325883280, "name": "2.1581", "id": 171215566333379780, "value": 2.1581, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327352016, "name": "function (tanh)", "id": 5182007766462265224, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327342128, "name": "-", "id": 3840219384412517367, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325882656, "name": "52.294", "id": -3837164720916464014, "value": 52.294, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327339104, "name": "*", "id": 3886975233785916872, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325882896, "name": "53.412228", "id": -9004879587580661632, "value": 53.412228, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327410160, "name": "*", "id": 1699323359140065157, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325884384, "name": "0.14169", "id": 6813787300680519218, "value": 0.14169, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327349616, "name": "function (tanh)", "id": -3624863381786532785, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327183088, "name": "-", "id": -437413265044690370, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325883712, "name": "11.0923", "id": 491185198450840868, "value": 11.0923, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327349280, "name": "*", "id": -5059234426370817495, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325884000, "name": "21.0852666", "id": -8665792741501690641, "value": 21.0852666, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327406992, "name": "*", "id": -3061923374072712376, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325762768, "name": "0.2051", "id": 2501232069797586549, "value": 0.2051, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327348512, "name": "function (tanh)", "id": 8446755331654659984, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327407808, "name": "-", "id": 6377154851368915274, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325763584, "name": "1.4684", "id": -7365290409052234874, "value": 1.4684, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327408672, "name": "*", "id": -3960981466435738632, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325748800, "name": "5.829105600000001", "id": 7483569177371509393, "value": 5.829105600000001, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327404400, "name": "*", "id": 2518374496591121073, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325749808, "name": "0.2531", "id": 3171899822705762194, "value": 0.2531, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327408960, "name": "function (tanh)", "id": -4703533040549178695, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327405216, "name": "-", "id": -8664962568826517430, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325749568, "name": "4.291641337386018", "id": 1807961534807208439, "value": 4.291641337386018, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327405696, "name": "*", "id": 3321095232564544938, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325757488, "name": "8.069908814589667", "id": 890690238775003320, "value": 8.069908814589667, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327410496, "name": "*", "id": 4164389431130363427, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760944, "name": "0.02167", "id": 6114961391790505965, "value": 0.02167, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327406224, "name": "function (tanh)", "id": 2383522471588310035, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327402576, "name": "+", "id": -1815583232254096246, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325656544, "name": "-87.5", "id": -482487959955197032, "value": -87.5, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327403296, "name": "*", "id": 4692026063749961978, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325506160, "name": "177.0", "id": 8660501241415816461, "value": 177.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327411360, "name": "*", "id": -355396826553107643, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324528208, "name": "1e-06", "id": -3069320665520676574, "value": 1e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327411216, "name": "+", "id": -2127618415987058030, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6327410400, "name": "/", "id": 8352833115125343175, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6327410784, "name": "/", "id": -3674833742996593706, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327410928, "name": "+", "id": 8922130656719774178, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324527776, "name": "-1.0", "id": -8456763896046725936, "value": -1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327548672, "name": "-", "id": 7645111419658218519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327548336, "name": "-", "id": -9167430632146772526, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327546080, "name": "+", "id": -118652456975249921, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326960048, "name": "-", "id": 8166320490570836002, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326957024, "name": "-", "id": -1426400927845783288, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326953280, "name": "+", "id": -87681102096113063, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326953136, "name": "Column vector of length 1", "id": 7498350506610149221, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "entries": [[-1.3664024208854978e-05]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326952128, "name": "-", "id": -3553484892908894406, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326728224, "name": "+", "id": -8293531578467133416, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326716848, "name": "@", "id": -7897331072600810934, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326716944, "name": "Sparse Matrix (1, 20)", "id": 2554937835408777545, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-6.666666666666666e-05, -6.666666666666666e-05, -6.666666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.66666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666674e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326724192, "name": "y[102:122]", "id": 5822907568351388675, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 102, "stop": 122, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326717088, "name": "@", "id": 2408778673299547818, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326728320, "name": "Sparse Matrix (1, 20)", "id": 2554937835408777545, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-6.666666666666666e-05, -6.666666666666666e-05, -6.666666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.66666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666674e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326597200, "name": "y[122:142]", "id": -4654073562494662926, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 122, "stop": 142, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951984, "name": "+", "id": -6068800631112939481, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944880, "name": "@", "id": 4277053689203630480, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326944688, "name": "Sparse Matrix (1, 20)", "id": -2763416208417960285, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0025692579121493727, 0.0025692579121493727, 0.002569257912149373, 0.0025692579121493727, 0.0025692579121493727, 0.002569257912149374, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493757, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Arcsinh", "py/id": 6326729184, "name": "function (arcsinh)", "id": 5781459614506051753, "function": "arcsinh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326726304, "name": "/", "id": 2429643751737650172, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325475936, "name": "0.6666666666666666", "id": -4601659744691921001, "value": 0.6666666666666666, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326599552, "name": "*", "id": -2432302278190366528, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326722944, "name": "*", "id": 7382909411869586226, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730288, "name": "*", "id": 3479221902762568791, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325472720, "name": "2e-05", "id": -416325789226925075, "value": 2e-05, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326730144, "name": "**", "id": -3866013196173468146, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326729472, "name": "maximum", "id": -38866897276748842, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324524848, "name": "1e-08", "id": 2248593343453076709, "value": 1e-08, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326715984, "name": "@", "id": -381515773720244289, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326730096, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326729856, "name": "**", "id": -1868943510485275387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326730432, "name": "maximum", "id": -4830756954153364032, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326730480, "name": "minimum", "id": -7371976683556488613, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326729712, "name": "@", "id": -7947777665951828331, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326717136, "name": "Sparse Matrix (1, 20)", "id": -1311178267164410342, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-12491.630996921805, 37474.892990765504], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195968, "name": "24983.261744011077", "id": -173151486002828470, "value": 24983.261744011077, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195008, "name": "0.000249832619938437", "id": 5018604233361534579, "value": 0.000249832619938437, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6215798272, "name": "@", "id": -2607619662398425646, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326719632, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326724432, "name": "**", "id": 8840658232720572223, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326723184, "name": "-", "id": 2338145762588095178, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325193376, "name": "Maximum concentration in negative electrode [mol.m-3]", "id": -4006365182696779717, "value": 24983.2619938437, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326730432, "name": "maximum", "id": -4830756954153364032, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326730480, "name": "minimum", "id": -7371976683556488613, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326729712, "name": "@", "id": -7947777665951828331, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326717136, "name": "Sparse Matrix (1, 20)", "id": -1311178267164410342, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-12491.630996921805, 37474.892990765504], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195968, "name": "24983.261744011077", "id": -173151486002828470, "value": 24983.261744011077, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195008, "name": "0.000249832619938437", "id": 5018604233361534579, "value": 0.000249832619938437, "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951840, "name": "+", "id": 2221407163864304667, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950976, "name": "+", "id": -2960133066485095630, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326950352, "name": "-", "id": -9139240763802421065, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326949776, "name": "-", "id": -380020215870947602, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326949104, "name": "-", "id": -8985395728359068257, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326948432, "name": "-", "id": -8728344082884186819, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326947808, "name": "-", "id": -824067711031895542, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326947184, "name": "-", "id": -4998106132020497923, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946560, "name": "+", "id": 7528121021614073017, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326945888, "name": "+", "id": 5359849752092524006, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477856, "name": "0.194", "id": 4251029814298257343, "value": 0.194, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326945744, "name": "*", "id": 7639587925667497463, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477568, "name": "1.5", "id": -1860591468980405701, "value": 1.5, "children": []}, {"py/object": "pybamm.expression_tree.functions.Exp", "py/id": 6326944208, "name": "function (exp)", "id": 3180788988723656329, "function": "exp", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326945648, "name": "*", "id": -37345490762490615, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477136, "name": "-120.0", "id": -2425182868076845414, "value": -120.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946416, "name": "*", "id": 7099450262039018463, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478624, "name": "0.0351", "id": -161632893335429177, "value": 0.0351, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326945552, "name": "function (tanh)", "id": 8454667870790248030, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946224, "name": "+", "id": 7942467795480504387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478960, "name": "-3.44578313253012", "id": 8444925721582764742, "value": -3.44578313253012, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946080, "name": "*", "id": 8381823886301776259, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478720, "name": "12.048192771084336", "id": 8097125027648466415, "value": 12.048192771084336, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947040, "name": "*", "id": 2048096631300921014, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478576, "name": "0.0045", "id": -2981038650488801168, "value": 0.0045, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326945984, "name": "function (tanh)", "id": -1623400745941997014, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946848, "name": "+", "id": -2416178302035251812, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480208, "name": "-7.1344537815126055", "id": 1460317602928865068, "value": -7.1344537815126055, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946752, "name": "*", "id": -851868951156677450, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480016, "name": "8.403361344537815", "id": 1404623847793106708, "value": 8.403361344537815, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947664, "name": "*", "id": -4019228816394572527, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480736, "name": "0.035", "id": 6162767455658282703, "value": 0.035, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326946656, "name": "function (tanh)", "id": -1150884761896753166, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326947520, "name": "+", "id": 7644935680070045406, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325481552, "name": "-18.466", "id": -373623245734958046, "value": -18.466, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947376, "name": "*", "id": 5731199625910651132, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325481264, "name": "20.0", "id": -4340446481305119942, "value": 20.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948288, "name": "*", "id": -8398586198298319237, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325482944, "name": "0.0147", "id": 3513533554870653346, "value": 0.0147, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326946944, "name": "function (tanh)", "id": 6946148157129530496, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326948096, "name": "+", "id": 3779098074371246036, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325483136, "name": "-14.705882352941176", "id": -5925813036394720848, "value": -14.705882352941176, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947952, "name": "*", "id": -2391216548457030335, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325482800, "name": "29.41176470588235", "id": -1937713174565683752, "value": 29.41176470588235, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948960, "name": "*", "id": -6309866705551813062, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325313968, "name": "0.102", "id": -3729995203387465972, "value": 0.102, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326947856, "name": "function (tanh)", "id": -4550779299409160821, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326948768, "name": "+", "id": 1480749490317416490, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325198608, "name": "-1.3661971830985917", "id": -8384546222245432196, "value": -1.3661971830985917, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948624, "name": "*", "id": 3728936636961048916, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484672, "name": "7.042253521126761", "id": 6960204674628031657, "value": 7.042253521126761, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949632, "name": "*", "id": 4649296532770888742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484336, "name": "0.022", "id": -1950766998167305555, "value": 0.022, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326948528, "name": "function (tanh)", "id": 1577914864793947784, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326949440, "name": "+", "id": -9088454947200883348, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484288, "name": "-54.8780487804878", "id": 7787322731592813793, "value": -54.8780487804878, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949296, "name": "*", "id": -1686636676232609815, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484144, "name": "60.975609756097555", "id": -65658111227441629, "value": 60.975609756097555, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950208, "name": "*", "id": 7119747142001126644, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480688, "name": "0.011", "id": 2677758333144557655, "value": 0.011, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326949200, "name": "function (tanh)", "id": 1097948657258569153, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950064, "name": "+", "id": 6534944802070438685, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325479440, "name": "-5.486725663716814", "id": 6197169621668094767, "value": -5.486725663716814, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949920, "name": "*", "id": -4763378136876713897, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325479968, "name": "44.24778761061947", "id": -6493965988769950205, "value": 44.24778761061947, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950832, "name": "*", "id": -6669455122115546387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477472, "name": "0.0155", "id": -2650083987933338625, "value": 0.0155, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326949536, "name": "function (tanh)", "id": 206273733215490184, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950688, "name": "+", "id": -2889338946402326512, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325474976, "name": "-3.6206896551724133", "id": -1794731523492796600, "value": -3.6206896551724133, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950544, "name": "*", "id": 6284796480753054853, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325476656, "name": "34.48275862068965", "id": -2390830538731112535, "value": 34.48275862068965, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326951696, "name": "*", "id": -6493752423506966711, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324528208, "name": "1e-06", "id": -3069320665520676574, "value": 1e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951552, "name": "+", "id": -6741445237676707870, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326950448, "name": "/", "id": 4057728519080426641, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326951120, "name": "/", "id": -3310090966227999806, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951264, "name": "+", "id": -6773688724399837147, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324527776, "name": "-1.0", "id": -8456763896046725936, "value": -1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326956928, "name": "@", "id": 8483904739322685359, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326957120, "name": "Sparse Matrix (1, 20)", "id": 1038870521767603098, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0015415547472896235, 0.0015415547472896235, 0.0015415547472896237, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896244, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896255, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Log", "py/id": 6326954288, "name": "function (log)", "id": -5030701221925340772, "function": "log", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326955536, "name": "maximum", "id": 4171024460717429445, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326955632, "name": "/", "id": -1900829629222783454, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955728, "name": "@", "id": -7873392624484173844, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955584, "name": "Sparse Matrix (20, 60)", "id": 8094614243801919291, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 60], "data": [0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223], "row_indices": [59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], "column_pointers": [0, 60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 660, 720, 780, 840, 900, 960, 1020, 1080, 1140, 1200]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324847536, "name": "1e-15", "id": -8705571835474137486, "value": 1e-15, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959904, "name": "*", "id": -4123933597739443935, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325509184, "name": "0.0024", "id": 6559832735740966387, "value": 0.0024, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959760, "name": "-", "id": 3029823735963637756, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326957456, "name": "/", "id": -5357639576507355315, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324849120, "name": "0.3333333333333333", "id": -5701793740805269720, "value": 0.3333333333333333, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958512, "name": "+", "id": 284263368525210904, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326958128, "name": "-", "id": 543545805456541861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326957696, "name": "+", "id": -7842655593740600439, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658224, "name": "0.014969257496616187", "id": -8353597445683247701, "value": 0.014969257496616187, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957552, "name": "*", "id": 4960491804341474864, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658512, "name": "0.00031386145712718525", "id": 3507164062337076, "value": 0.00031386145712718525, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957984, "name": "*", "id": 7112391073554976339, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658848, "name": "1.728612391486304e-07", "id": 4207388108385797869, "value": 1.728612391486304e-07, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958368, "name": "*", "id": 7749610267777311295, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325659232, "name": "2.5534825630890845e-11", "id": -5879707510941530913, "value": 2.5534825630890845e-11, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326958656, "name": "/", "id": 6855516544202313701, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326959472, "name": "+", "id": 8012764929235198493, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959184, "name": "-", "id": -2208441102872370140, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958896, "name": "+", "id": 2767688668933281379, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325471616, "name": "0.0911", "id": -1599851476179082992, "value": 0.0911, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958752, "name": "*", "id": 6881685191875661397, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484000, "name": "0.0019100999999999999", "id": -3779973321848982182, "value": 0.0019100999999999999, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959040, "name": "*", "id": -5173557815052613389, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325654528, "name": "1.052e-06", "id": -480156392906839787, "value": 1.052e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959328, "name": "*", "id": -9177911052441474098, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325652992, "name": "1.5540000000000003e-10", "id": -3428780814341171134, "value": 1.5540000000000003e-10, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327546032, "name": "@", "id": -2997497083290451214, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327546416, "name": "Sparse Matrix (1, 20)", "id": -5010322150182913717, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0015415547472896274, 0.0015415547472896192, 0.0015415547472896192, 0.0015415547472896274, 0.0015415547472896274, 0.0015415547472896192, 0.0015415547472896192, 0.0015415547472896274, 0.0015415547472896274, 0.0015415547472896192, 0.0015415547472896192, 0.0015415547472896274, 0.0015415547472896274, 0.0015415547472896192, 0.0015415547472896192, 0.0015415547472896274, 0.0015415547472896274, 0.0015415547472896192, 0.0015415547472896192, 0.0015415547472896274], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Log", "py/id": 6326854400, "name": "function (log)", "id": 9100380297557791119, "function": "log", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326854352, "name": "maximum", "id": -4986823990311929281, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326856992, "name": "/", "id": -1412731153990944070, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326848880, "name": "*", "id": -1024443419409141381, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326852048, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326950160, "name": "y[82:102]", "id": 5004984274525037322, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 82, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326856896, "name": "@", "id": -2924452854392613021, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326856944, "name": "Sparse Matrix (20, 60)", "id": 8094614243801919291, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 60], "data": [0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223], "row_indices": [59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], "column_pointers": [0, 60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 660, 720, 780, 840, 900, 960, 1020, 1080, 1140, 1200]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324847536, "name": "1e-15", "id": -8705571835474137486, "value": 1e-15, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327548480, "name": "@", "id": 9199290068259236999, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327548288, "name": "Column vector of length 1", "id": -969989925248889039, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 1], "data": [3.3343750000000014e-05], "row_indices": [0], "column_pointers": [0, 1]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326845712, "name": "/", "id": 2000317851754806712, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305760, "name": "23.999999999999996", "id": -1312225410768614328, "value": 23.999999999999996, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958512, "name": "+", "id": 284263368525210904, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326958128, "name": "-", "id": 543545805456541861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326957696, "name": "+", "id": -7842655593740600439, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658224, "name": "0.014969257496616187", "id": -8353597445683247701, "value": 0.014969257496616187, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957552, "name": "*", "id": 4960491804341474864, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658512, "name": "0.00031386145712718525", "id": 3507164062337076, "value": 0.00031386145712718525, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957984, "name": "*", "id": 7112391073554976339, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658848, "name": "1.728612391486304e-07", "id": 4207388108385797869, "value": 1.728612391486304e-07, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958368, "name": "*", "id": 7749610267777311295, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325659232, "name": "2.5534825630890845e-11", "id": -5879707510941530913, "value": 2.5534825630890845e-11, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326858432, "name": "/", "id": 4483006077393506350, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325966736, "name": "0.0029999999999999996", "id": 1686576887488082418, "value": 0.0029999999999999996, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326959472, "name": "+", "id": 8012764929235198493, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959184, "name": "-", "id": -2208441102872370140, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958896, "name": "+", "id": 2767688668933281379, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325471616, "name": "0.0911", "id": -1599851476179082992, "value": 0.0911, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958752, "name": "*", "id": 6881685191875661397, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484000, "name": "0.0019100999999999999", "id": -3779973321848982182, "value": 0.0019100999999999999, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959040, "name": "*", "id": -5173557815052613389, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325654528, "name": "1.052e-06", "id": -480156392906839787, "value": 1.052e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959328, "name": "*", "id": -9177911052441474098, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325652992, "name": "1.5540000000000003e-10", "id": -3428780814341171134, "value": 1.5540000000000003e-10, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}]}]}]}}, {"py/object": "pybamm.models.event.Event", "py/id": 6327980720, "name": "Maximum voltage [V]", "event_type": ["EventType.TERMINATION", 0], "expression": {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327849264, "name": "-", "id": -2243069146693903060, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327982448, "name": "Column vector of length 1", "id": 4424409789009270636, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[4.100921649318004]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327978272, "name": "@", "id": 6784395123585641641, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327978224, "name": "Column vector of length 1", "id": 8974974551673498401, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 1], "data": [1.0], "row_indices": [0], "column_pointers": [0, 1]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327548960, "name": "+", "id": 2047164259306671834, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325968896, "name": "0.0007854359432768872", "id": 9043761854608558187, "value": 0.0007854359432768872, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327548816, "name": "+", "id": 6932362662972156975, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327543248, "name": "+", "id": 4840300324861772786, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327541136, "name": "@", "id": -2709079084813101903, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327542048, "name": "Sparse Matrix (1, 20)", "id": 3368198892565785478, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379, 0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379, 0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379, 0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379, 0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Arcsinh", "py/id": 6327178864, "name": "function (arcsinh)", "id": 7762713935640245493, "function": "arcsinh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6327545264, "name": "/", "id": 4944969372638363630, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325879680, "name": "-0.7999999999999998", "id": -3710793542993154521, "value": -0.7999999999999998, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327543824, "name": "*", "id": 4361800515267115836, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327179248, "name": "*", "id": -1491280552144432845, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327542192, "name": "*", "id": 5229285744879996886, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325761760, "name": "6e-07", "id": -6590763337784132718, "value": 6e-07, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6327541904, "name": "**", "id": 4795026116698599361, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327541760, "name": "maximum", "id": 4201724619927351633, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326848880, "name": "*", "id": -1024443419409141381, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326852048, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326950160, "name": "y[82:102]", "id": 5004984274525037322, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 82, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324524848, "name": "1e-08", "id": 2248593343453076709, "value": 1e-08, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327543008, "name": "@", "id": -1517419550502331233, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327182464, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6327542624, "name": "**", "id": -8861031940181067515, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327542384, "name": "maximum", "id": -6537165250718408597, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327541472, "name": "minimum", "id": -3458429554634586861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 5717422352, "name": "@", "id": 7895283603065353686, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5717029328, "name": "Sparse Matrix (1, 20)", "id": 7679991478818445457, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-25608.96286546366, 76826.88859639116], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760032, "name": "51217.92521874824", "id": 7356165989114971861, "value": 51217.92521874824, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760224, "name": "0.000512179257309275", "id": 5257926711616135225, "value": 0.000512179257309275, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327543728, "name": "@", "id": -6047761952718693602, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327542960, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6327543296, "name": "**", "id": 3295831492052380392, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327543152, "name": "-", "id": -1561935877243134980, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325206192, "name": "Maximum concentration in positive electrode [mol.m-3]", "id": 3383638487514802611, "value": 51217.9257309275, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327542384, "name": "maximum", "id": -6537165250718408597, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327541472, "name": "minimum", "id": -3458429554634586861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 5717422352, "name": "@", "id": 7895283603065353686, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5717029328, "name": "Sparse Matrix (1, 20)", "id": 7679991478818445457, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-25608.96286546366, 76826.88859639116], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760032, "name": "51217.92521874824", "id": 7356165989114971861, "value": 51217.92521874824, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760224, "name": "0.000512179257309275", "id": 5257926711616135225, "value": 0.000512179257309275, "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327411456, "name": "+", "id": -8542356934082764471, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327410640, "name": "-", "id": -5881486871864474767, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327403968, "name": "+", "id": 168258033325559907, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327406464, "name": "+", "id": 5410227661158463177, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327409296, "name": "-", "id": -3873191716778206204, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327346928, "name": "+", "id": 1646407663188186445, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327349952, "name": "+", "id": 4576194534802704835, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325882224, "name": "2.16216", "id": -6538175388565902983, "value": 2.16216, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327350384, "name": "*", "id": 6489020822145545842, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325881936, "name": "0.07645", "id": -5342533196016870602, "value": 0.07645, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327353072, "name": "function (tanh)", "id": 2765804916049038233, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327350960, "name": "-", "id": 5417692422309938819, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325881360, "name": "30.834", "id": 3553451709505253030, "value": 30.834, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327351440, "name": "*", "id": -7833679857076767803, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325881600, "name": "57.858397200000006", "id": 262757461604605267, "value": 57.858397200000006, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327344384, "name": "*", "id": 5855291803804478793, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325883280, "name": "2.1581", "id": 171215566333379780, "value": 2.1581, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327352016, "name": "function (tanh)", "id": 5182007766462265224, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327342128, "name": "-", "id": 3840219384412517367, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325882656, "name": "52.294", "id": -3837164720916464014, "value": 52.294, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327339104, "name": "*", "id": 3886975233785916872, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325882896, "name": "53.412228", "id": -9004879587580661632, "value": 53.412228, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327410160, "name": "*", "id": 1699323359140065157, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325884384, "name": "0.14169", "id": 6813787300680519218, "value": 0.14169, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327349616, "name": "function (tanh)", "id": -3624863381786532785, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327183088, "name": "-", "id": -437413265044690370, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325883712, "name": "11.0923", "id": 491185198450840868, "value": 11.0923, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327349280, "name": "*", "id": -5059234426370817495, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325884000, "name": "21.0852666", "id": -8665792741501690641, "value": 21.0852666, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327406992, "name": "*", "id": -3061923374072712376, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325762768, "name": "0.2051", "id": 2501232069797586549, "value": 0.2051, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327348512, "name": "function (tanh)", "id": 8446755331654659984, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327407808, "name": "-", "id": 6377154851368915274, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325763584, "name": "1.4684", "id": -7365290409052234874, "value": 1.4684, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327408672, "name": "*", "id": -3960981466435738632, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325748800, "name": "5.829105600000001", "id": 7483569177371509393, "value": 5.829105600000001, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327404400, "name": "*", "id": 2518374496591121073, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325749808, "name": "0.2531", "id": 3171899822705762194, "value": 0.2531, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327408960, "name": "function (tanh)", "id": -4703533040549178695, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327405216, "name": "-", "id": -8664962568826517430, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325749568, "name": "4.291641337386018", "id": 1807961534807208439, "value": 4.291641337386018, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327405696, "name": "*", "id": 3321095232564544938, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325757488, "name": "8.069908814589667", "id": 890690238775003320, "value": 8.069908814589667, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327410496, "name": "*", "id": 4164389431130363427, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760944, "name": "0.02167", "id": 6114961391790505965, "value": 0.02167, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327406224, "name": "function (tanh)", "id": 2383522471588310035, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327402576, "name": "+", "id": -1815583232254096246, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325656544, "name": "-87.5", "id": -482487959955197032, "value": -87.5, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327403296, "name": "*", "id": 4692026063749961978, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325506160, "name": "177.0", "id": 8660501241415816461, "value": 177.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327411360, "name": "*", "id": -355396826553107643, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324528208, "name": "1e-06", "id": -3069320665520676574, "value": 1e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327411216, "name": "+", "id": -2127618415987058030, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6327410400, "name": "/", "id": 8352833115125343175, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6327410784, "name": "/", "id": -3674833742996593706, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327410928, "name": "+", "id": 8922130656719774178, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324527776, "name": "-1.0", "id": -8456763896046725936, "value": -1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327548672, "name": "-", "id": 7645111419658218519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327548336, "name": "-", "id": -9167430632146772526, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327546080, "name": "+", "id": -118652456975249921, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326960048, "name": "-", "id": 8166320490570836002, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326957024, "name": "-", "id": -1426400927845783288, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326953280, "name": "+", "id": -87681102096113063, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326953136, "name": "Column vector of length 1", "id": 7498350506610149221, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "entries": [[-1.3664024208854978e-05]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326952128, "name": "-", "id": -3553484892908894406, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326728224, "name": "+", "id": -8293531578467133416, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326716848, "name": "@", "id": -7897331072600810934, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326716944, "name": "Sparse Matrix (1, 20)", "id": 2554937835408777545, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-6.666666666666666e-05, -6.666666666666666e-05, -6.666666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.66666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666674e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326724192, "name": "y[102:122]", "id": 5822907568351388675, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 102, "stop": 122, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326717088, "name": "@", "id": 2408778673299547818, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326728320, "name": "Sparse Matrix (1, 20)", "id": 2554937835408777545, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-6.666666666666666e-05, -6.666666666666666e-05, -6.666666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.66666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666674e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326597200, "name": "y[122:142]", "id": -4654073562494662926, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 122, "stop": 142, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951984, "name": "+", "id": -6068800631112939481, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944880, "name": "@", "id": 4277053689203630480, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326944688, "name": "Sparse Matrix (1, 20)", "id": -2763416208417960285, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0025692579121493727, 0.0025692579121493727, 0.002569257912149373, 0.0025692579121493727, 0.0025692579121493727, 0.002569257912149374, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493757, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Arcsinh", "py/id": 6326729184, "name": "function (arcsinh)", "id": 5781459614506051753, "function": "arcsinh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326726304, "name": "/", "id": 2429643751737650172, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325475936, "name": "0.6666666666666666", "id": -4601659744691921001, "value": 0.6666666666666666, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326599552, "name": "*", "id": -2432302278190366528, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326722944, "name": "*", "id": 7382909411869586226, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730288, "name": "*", "id": 3479221902762568791, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325472720, "name": "2e-05", "id": -416325789226925075, "value": 2e-05, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326730144, "name": "**", "id": -3866013196173468146, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326729472, "name": "maximum", "id": -38866897276748842, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324524848, "name": "1e-08", "id": 2248593343453076709, "value": 1e-08, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326715984, "name": "@", "id": -381515773720244289, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326730096, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326729856, "name": "**", "id": -1868943510485275387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326730432, "name": "maximum", "id": -4830756954153364032, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326730480, "name": "minimum", "id": -7371976683556488613, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326729712, "name": "@", "id": -7947777665951828331, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326717136, "name": "Sparse Matrix (1, 20)", "id": -1311178267164410342, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-12491.630996921805, 37474.892990765504], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195968, "name": "24983.261744011077", "id": -173151486002828470, "value": 24983.261744011077, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195008, "name": "0.000249832619938437", "id": 5018604233361534579, "value": 0.000249832619938437, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6215798272, "name": "@", "id": -2607619662398425646, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326719632, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326724432, "name": "**", "id": 8840658232720572223, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326723184, "name": "-", "id": 2338145762588095178, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325193376, "name": "Maximum concentration in negative electrode [mol.m-3]", "id": -4006365182696779717, "value": 24983.2619938437, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326730432, "name": "maximum", "id": -4830756954153364032, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326730480, "name": "minimum", "id": -7371976683556488613, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326729712, "name": "@", "id": -7947777665951828331, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326717136, "name": "Sparse Matrix (1, 20)", "id": -1311178267164410342, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-12491.630996921805, 37474.892990765504], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195968, "name": "24983.261744011077", "id": -173151486002828470, "value": 24983.261744011077, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195008, "name": "0.000249832619938437", "id": 5018604233361534579, "value": 0.000249832619938437, "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951840, "name": "+", "id": 2221407163864304667, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950976, "name": "+", "id": -2960133066485095630, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326950352, "name": "-", "id": -9139240763802421065, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326949776, "name": "-", "id": -380020215870947602, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326949104, "name": "-", "id": -8985395728359068257, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326948432, "name": "-", "id": -8728344082884186819, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326947808, "name": "-", "id": -824067711031895542, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326947184, "name": "-", "id": -4998106132020497923, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946560, "name": "+", "id": 7528121021614073017, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326945888, "name": "+", "id": 5359849752092524006, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477856, "name": "0.194", "id": 4251029814298257343, "value": 0.194, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326945744, "name": "*", "id": 7639587925667497463, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477568, "name": "1.5", "id": -1860591468980405701, "value": 1.5, "children": []}, {"py/object": "pybamm.expression_tree.functions.Exp", "py/id": 6326944208, "name": "function (exp)", "id": 3180788988723656329, "function": "exp", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326945648, "name": "*", "id": -37345490762490615, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477136, "name": "-120.0", "id": -2425182868076845414, "value": -120.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946416, "name": "*", "id": 7099450262039018463, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478624, "name": "0.0351", "id": -161632893335429177, "value": 0.0351, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326945552, "name": "function (tanh)", "id": 8454667870790248030, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946224, "name": "+", "id": 7942467795480504387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478960, "name": "-3.44578313253012", "id": 8444925721582764742, "value": -3.44578313253012, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946080, "name": "*", "id": 8381823886301776259, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478720, "name": "12.048192771084336", "id": 8097125027648466415, "value": 12.048192771084336, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947040, "name": "*", "id": 2048096631300921014, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478576, "name": "0.0045", "id": -2981038650488801168, "value": 0.0045, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326945984, "name": "function (tanh)", "id": -1623400745941997014, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946848, "name": "+", "id": -2416178302035251812, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480208, "name": "-7.1344537815126055", "id": 1460317602928865068, "value": -7.1344537815126055, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946752, "name": "*", "id": -851868951156677450, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480016, "name": "8.403361344537815", "id": 1404623847793106708, "value": 8.403361344537815, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947664, "name": "*", "id": -4019228816394572527, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480736, "name": "0.035", "id": 6162767455658282703, "value": 0.035, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326946656, "name": "function (tanh)", "id": -1150884761896753166, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326947520, "name": "+", "id": 7644935680070045406, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325481552, "name": "-18.466", "id": -373623245734958046, "value": -18.466, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947376, "name": "*", "id": 5731199625910651132, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325481264, "name": "20.0", "id": -4340446481305119942, "value": 20.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948288, "name": "*", "id": -8398586198298319237, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325482944, "name": "0.0147", "id": 3513533554870653346, "value": 0.0147, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326946944, "name": "function (tanh)", "id": 6946148157129530496, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326948096, "name": "+", "id": 3779098074371246036, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325483136, "name": "-14.705882352941176", "id": -5925813036394720848, "value": -14.705882352941176, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947952, "name": "*", "id": -2391216548457030335, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325482800, "name": "29.41176470588235", "id": -1937713174565683752, "value": 29.41176470588235, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948960, "name": "*", "id": -6309866705551813062, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325313968, "name": "0.102", "id": -3729995203387465972, "value": 0.102, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326947856, "name": "function (tanh)", "id": -4550779299409160821, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326948768, "name": "+", "id": 1480749490317416490, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325198608, "name": "-1.3661971830985917", "id": -8384546222245432196, "value": -1.3661971830985917, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948624, "name": "*", "id": 3728936636961048916, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484672, "name": "7.042253521126761", "id": 6960204674628031657, "value": 7.042253521126761, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949632, "name": "*", "id": 4649296532770888742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484336, "name": "0.022", "id": -1950766998167305555, "value": 0.022, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326948528, "name": "function (tanh)", "id": 1577914864793947784, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326949440, "name": "+", "id": -9088454947200883348, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484288, "name": "-54.8780487804878", "id": 7787322731592813793, "value": -54.8780487804878, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949296, "name": "*", "id": -1686636676232609815, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484144, "name": "60.975609756097555", "id": -65658111227441629, "value": 60.975609756097555, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950208, "name": "*", "id": 7119747142001126644, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480688, "name": "0.011", "id": 2677758333144557655, "value": 0.011, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326949200, "name": "function (tanh)", "id": 1097948657258569153, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950064, "name": "+", "id": 6534944802070438685, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325479440, "name": "-5.486725663716814", "id": 6197169621668094767, "value": -5.486725663716814, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949920, "name": "*", "id": -4763378136876713897, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325479968, "name": "44.24778761061947", "id": -6493965988769950205, "value": 44.24778761061947, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950832, "name": "*", "id": -6669455122115546387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477472, "name": "0.0155", "id": -2650083987933338625, "value": 0.0155, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326949536, "name": "function (tanh)", "id": 206273733215490184, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950688, "name": "+", "id": -2889338946402326512, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325474976, "name": "-3.6206896551724133", "id": -1794731523492796600, "value": -3.6206896551724133, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950544, "name": "*", "id": 6284796480753054853, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325476656, "name": "34.48275862068965", "id": -2390830538731112535, "value": 34.48275862068965, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326951696, "name": "*", "id": -6493752423506966711, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324528208, "name": "1e-06", "id": -3069320665520676574, "value": 1e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951552, "name": "+", "id": -6741445237676707870, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326950448, "name": "/", "id": 4057728519080426641, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326951120, "name": "/", "id": -3310090966227999806, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951264, "name": "+", "id": -6773688724399837147, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324527776, "name": "-1.0", "id": -8456763896046725936, "value": -1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326956928, "name": "@", "id": 8483904739322685359, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326957120, "name": "Sparse Matrix (1, 20)", "id": 1038870521767603098, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0015415547472896235, 0.0015415547472896235, 0.0015415547472896237, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896244, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896255, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Log", "py/id": 6326954288, "name": "function (log)", "id": -5030701221925340772, "function": "log", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326955536, "name": "maximum", "id": 4171024460717429445, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326955632, "name": "/", "id": -1900829629222783454, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955728, "name": "@", "id": -7873392624484173844, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955584, "name": "Sparse Matrix (20, 60)", "id": 8094614243801919291, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 60], "data": [0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223], "row_indices": [59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], "column_pointers": [0, 60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 660, 720, 780, 840, 900, 960, 1020, 1080, 1140, 1200]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324847536, "name": "1e-15", "id": -8705571835474137486, "value": 1e-15, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959904, "name": "*", "id": -4123933597739443935, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325509184, "name": "0.0024", "id": 6559832735740966387, "value": 0.0024, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959760, "name": "-", "id": 3029823735963637756, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326957456, "name": "/", "id": -5357639576507355315, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324849120, "name": "0.3333333333333333", "id": -5701793740805269720, "value": 0.3333333333333333, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958512, "name": "+", "id": 284263368525210904, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326958128, "name": "-", "id": 543545805456541861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326957696, "name": "+", "id": -7842655593740600439, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658224, "name": "0.014969257496616187", "id": -8353597445683247701, "value": 0.014969257496616187, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957552, "name": "*", "id": 4960491804341474864, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658512, "name": "0.00031386145712718525", "id": 3507164062337076, "value": 0.00031386145712718525, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957984, "name": "*", "id": 7112391073554976339, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658848, "name": "1.728612391486304e-07", "id": 4207388108385797869, "value": 1.728612391486304e-07, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958368, "name": "*", "id": 7749610267777311295, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325659232, "name": "2.5534825630890845e-11", "id": -5879707510941530913, "value": 2.5534825630890845e-11, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326958656, "name": "/", "id": 6855516544202313701, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326959472, "name": "+", "id": 8012764929235198493, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959184, "name": "-", "id": -2208441102872370140, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958896, "name": "+", "id": 2767688668933281379, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325471616, "name": "0.0911", "id": -1599851476179082992, "value": 0.0911, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958752, "name": "*", "id": 6881685191875661397, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484000, "name": "0.0019100999999999999", "id": -3779973321848982182, "value": 0.0019100999999999999, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959040, "name": "*", "id": -5173557815052613389, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325654528, "name": "1.052e-06", "id": -480156392906839787, "value": 1.052e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959328, "name": "*", "id": -9177911052441474098, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325652992, "name": "1.5540000000000003e-10", "id": -3428780814341171134, "value": 1.5540000000000003e-10, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327546032, "name": "@", "id": -2997497083290451214, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327546416, "name": "Sparse Matrix (1, 20)", "id": -5010322150182913717, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0015415547472896274, 0.0015415547472896192, 0.0015415547472896192, 0.0015415547472896274, 0.0015415547472896274, 0.0015415547472896192, 0.0015415547472896192, 0.0015415547472896274, 0.0015415547472896274, 0.0015415547472896192, 0.0015415547472896192, 0.0015415547472896274, 0.0015415547472896274, 0.0015415547472896192, 0.0015415547472896192, 0.0015415547472896274, 0.0015415547472896274, 0.0015415547472896192, 0.0015415547472896192, 0.0015415547472896274], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Log", "py/id": 6326854400, "name": "function (log)", "id": 9100380297557791119, "function": "log", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326854352, "name": "maximum", "id": -4986823990311929281, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326856992, "name": "/", "id": -1412731153990944070, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326848880, "name": "*", "id": -1024443419409141381, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326852048, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326950160, "name": "y[82:102]", "id": 5004984274525037322, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 82, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326856896, "name": "@", "id": -2924452854392613021, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326856944, "name": "Sparse Matrix (20, 60)", "id": 8094614243801919291, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 60], "data": [0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223], "row_indices": [59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], "column_pointers": [0, 60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 660, 720, 780, 840, 900, 960, 1020, 1080, 1140, 1200]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324847536, "name": "1e-15", "id": -8705571835474137486, "value": 1e-15, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327548480, "name": "@", "id": 9199290068259236999, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327548288, "name": "Column vector of length 1", "id": -969989925248889039, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 1], "data": [3.3343750000000014e-05], "row_indices": [0], "column_pointers": [0, 1]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326845712, "name": "/", "id": 2000317851754806712, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305760, "name": "23.999999999999996", "id": -1312225410768614328, "value": 23.999999999999996, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958512, "name": "+", "id": 284263368525210904, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326958128, "name": "-", "id": 543545805456541861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326957696, "name": "+", "id": -7842655593740600439, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658224, "name": "0.014969257496616187", "id": -8353597445683247701, "value": 0.014969257496616187, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957552, "name": "*", "id": 4960491804341474864, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658512, "name": "0.00031386145712718525", "id": 3507164062337076, "value": 0.00031386145712718525, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957984, "name": "*", "id": 7112391073554976339, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658848, "name": "1.728612391486304e-07", "id": 4207388108385797869, "value": 1.728612391486304e-07, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958368, "name": "*", "id": 7749610267777311295, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325659232, "name": "2.5534825630890845e-11", "id": -5879707510941530913, "value": 2.5534825630890845e-11, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326858432, "name": "/", "id": 4483006077393506350, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325966736, "name": "0.0029999999999999996", "id": 1686576887488082418, "value": 0.0029999999999999996, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326959472, "name": "+", "id": 8012764929235198493, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959184, "name": "-", "id": -2208441102872370140, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958896, "name": "+", "id": 2767688668933281379, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325471616, "name": "0.0911", "id": -1599851476179082992, "value": 0.0911, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958752, "name": "*", "id": 6881685191875661397, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484000, "name": "0.0019100999999999999", "id": -3779973321848982182, "value": 0.0019100999999999999, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959040, "name": "*", "id": -5173557815052613389, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325654528, "name": "1.052e-06", "id": -480156392906839787, "value": 1.052e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959328, "name": "*", "id": -9177911052441474098, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325652992, "name": "1.5540000000000003e-10", "id": -3428780814341171134, "value": 1.5540000000000003e-10, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}]}]}]}}, {"py/object": "pybamm.models.event.Event", "py/id": 6327856320, "name": "Minimum voltage switch [V]", "event_type": ["EventType.SWITCH", 3], "expression": {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327861216, "name": "+", "id": 3744032212924790185, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6328077968, "name": "Column vector of length 1", "id": -3566927838641700141, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[-3.005921649318005]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327978272, "name": "@", "id": 6784395123585641641, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327978224, "name": "Column vector of length 1", "id": 8974974551673498401, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 1], "data": [1.0], "row_indices": [0], "column_pointers": [0, 1]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327548960, "name": "+", "id": 2047164259306671834, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325968896, "name": "0.0007854359432768872", "id": 9043761854608558187, "value": 0.0007854359432768872, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327548816, "name": "+", "id": 6932362662972156975, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327543248, "name": "+", "id": 4840300324861772786, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327541136, "name": "@", "id": -2709079084813101903, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327542048, "name": "Sparse Matrix (1, 20)", "id": 3368198892565785478, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379, 0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379, 0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379, 0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379, 0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Arcsinh", "py/id": 6327178864, "name": "function (arcsinh)", "id": 7762713935640245493, "function": "arcsinh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6327545264, "name": "/", "id": 4944969372638363630, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325879680, "name": "-0.7999999999999998", "id": -3710793542993154521, "value": -0.7999999999999998, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327543824, "name": "*", "id": 4361800515267115836, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327179248, "name": "*", "id": -1491280552144432845, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327542192, "name": "*", "id": 5229285744879996886, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325761760, "name": "6e-07", "id": -6590763337784132718, "value": 6e-07, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6327541904, "name": "**", "id": 4795026116698599361, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327541760, "name": "maximum", "id": 4201724619927351633, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326848880, "name": "*", "id": -1024443419409141381, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326852048, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326950160, "name": "y[82:102]", "id": 5004984274525037322, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 82, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324524848, "name": "1e-08", "id": 2248593343453076709, "value": 1e-08, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327543008, "name": "@", "id": -1517419550502331233, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327182464, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6327542624, "name": "**", "id": -8861031940181067515, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327542384, "name": "maximum", "id": -6537165250718408597, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327541472, "name": "minimum", "id": -3458429554634586861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 5717422352, "name": "@", "id": 7895283603065353686, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5717029328, "name": "Sparse Matrix (1, 20)", "id": 7679991478818445457, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-25608.96286546366, 76826.88859639116], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760032, "name": "51217.92521874824", "id": 7356165989114971861, "value": 51217.92521874824, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760224, "name": "0.000512179257309275", "id": 5257926711616135225, "value": 0.000512179257309275, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327543728, "name": "@", "id": -6047761952718693602, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327542960, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6327543296, "name": "**", "id": 3295831492052380392, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327543152, "name": "-", "id": -1561935877243134980, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325206192, "name": "Maximum concentration in positive electrode [mol.m-3]", "id": 3383638487514802611, "value": 51217.9257309275, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327542384, "name": "maximum", "id": -6537165250718408597, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327541472, "name": "minimum", "id": -3458429554634586861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 5717422352, "name": "@", "id": 7895283603065353686, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5717029328, "name": "Sparse Matrix (1, 20)", "id": 7679991478818445457, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-25608.96286546366, 76826.88859639116], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760032, "name": "51217.92521874824", "id": 7356165989114971861, "value": 51217.92521874824, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760224, "name": "0.000512179257309275", "id": 5257926711616135225, "value": 0.000512179257309275, "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327411456, "name": "+", "id": -8542356934082764471, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327410640, "name": "-", "id": -5881486871864474767, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327403968, "name": "+", "id": 168258033325559907, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327406464, "name": "+", "id": 5410227661158463177, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327409296, "name": "-", "id": -3873191716778206204, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327346928, "name": "+", "id": 1646407663188186445, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327349952, "name": "+", "id": 4576194534802704835, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325882224, "name": "2.16216", "id": -6538175388565902983, "value": 2.16216, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327350384, "name": "*", "id": 6489020822145545842, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325881936, "name": "0.07645", "id": -5342533196016870602, "value": 0.07645, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327353072, "name": "function (tanh)", "id": 2765804916049038233, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327350960, "name": "-", "id": 5417692422309938819, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325881360, "name": "30.834", "id": 3553451709505253030, "value": 30.834, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327351440, "name": "*", "id": -7833679857076767803, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325881600, "name": "57.858397200000006", "id": 262757461604605267, "value": 57.858397200000006, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327344384, "name": "*", "id": 5855291803804478793, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325883280, "name": "2.1581", "id": 171215566333379780, "value": 2.1581, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327352016, "name": "function (tanh)", "id": 5182007766462265224, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327342128, "name": "-", "id": 3840219384412517367, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325882656, "name": "52.294", "id": -3837164720916464014, "value": 52.294, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327339104, "name": "*", "id": 3886975233785916872, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325882896, "name": "53.412228", "id": -9004879587580661632, "value": 53.412228, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327410160, "name": "*", "id": 1699323359140065157, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325884384, "name": "0.14169", "id": 6813787300680519218, "value": 0.14169, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327349616, "name": "function (tanh)", "id": -3624863381786532785, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327183088, "name": "-", "id": -437413265044690370, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325883712, "name": "11.0923", "id": 491185198450840868, "value": 11.0923, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327349280, "name": "*", "id": -5059234426370817495, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325884000, "name": "21.0852666", "id": -8665792741501690641, "value": 21.0852666, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327406992, "name": "*", "id": -3061923374072712376, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325762768, "name": "0.2051", "id": 2501232069797586549, "value": 0.2051, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327348512, "name": "function (tanh)", "id": 8446755331654659984, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327407808, "name": "-", "id": 6377154851368915274, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325763584, "name": "1.4684", "id": -7365290409052234874, "value": 1.4684, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327408672, "name": "*", "id": -3960981466435738632, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325748800, "name": "5.829105600000001", "id": 7483569177371509393, "value": 5.829105600000001, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327404400, "name": "*", "id": 2518374496591121073, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325749808, "name": "0.2531", "id": 3171899822705762194, "value": 0.2531, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327408960, "name": "function (tanh)", "id": -4703533040549178695, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327405216, "name": "-", "id": -8664962568826517430, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325749568, "name": "4.291641337386018", "id": 1807961534807208439, "value": 4.291641337386018, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327405696, "name": "*", "id": 3321095232564544938, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325757488, "name": "8.069908814589667", "id": 890690238775003320, "value": 8.069908814589667, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327410496, "name": "*", "id": 4164389431130363427, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760944, "name": "0.02167", "id": 6114961391790505965, "value": 0.02167, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327406224, "name": "function (tanh)", "id": 2383522471588310035, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327402576, "name": "+", "id": -1815583232254096246, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325656544, "name": "-87.5", "id": -482487959955197032, "value": -87.5, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327403296, "name": "*", "id": 4692026063749961978, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325506160, "name": "177.0", "id": 8660501241415816461, "value": 177.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327411360, "name": "*", "id": -355396826553107643, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324528208, "name": "1e-06", "id": -3069320665520676574, "value": 1e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327411216, "name": "+", "id": -2127618415987058030, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6327410400, "name": "/", "id": 8352833115125343175, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6327410784, "name": "/", "id": -3674833742996593706, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327410928, "name": "+", "id": 8922130656719774178, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324527776, "name": "-1.0", "id": -8456763896046725936, "value": -1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327548672, "name": "-", "id": 7645111419658218519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327548336, "name": "-", "id": -9167430632146772526, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327546080, "name": "+", "id": -118652456975249921, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326960048, "name": "-", "id": 8166320490570836002, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326957024, "name": "-", "id": -1426400927845783288, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326953280, "name": "+", "id": -87681102096113063, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326953136, "name": "Column vector of length 1", "id": 7498350506610149221, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "entries": [[-1.3664024208854978e-05]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326952128, "name": "-", "id": -3553484892908894406, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326728224, "name": "+", "id": -8293531578467133416, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326716848, "name": "@", "id": -7897331072600810934, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326716944, "name": "Sparse Matrix (1, 20)", "id": 2554937835408777545, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-6.666666666666666e-05, -6.666666666666666e-05, -6.666666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.66666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666674e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326724192, "name": "y[102:122]", "id": 5822907568351388675, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 102, "stop": 122, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326717088, "name": "@", "id": 2408778673299547818, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326728320, "name": "Sparse Matrix (1, 20)", "id": 2554937835408777545, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-6.666666666666666e-05, -6.666666666666666e-05, -6.666666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.66666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666674e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326597200, "name": "y[122:142]", "id": -4654073562494662926, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 122, "stop": 142, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951984, "name": "+", "id": -6068800631112939481, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944880, "name": "@", "id": 4277053689203630480, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326944688, "name": "Sparse Matrix (1, 20)", "id": -2763416208417960285, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0025692579121493727, 0.0025692579121493727, 0.002569257912149373, 0.0025692579121493727, 0.0025692579121493727, 0.002569257912149374, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493757, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Arcsinh", "py/id": 6326729184, "name": "function (arcsinh)", "id": 5781459614506051753, "function": "arcsinh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326726304, "name": "/", "id": 2429643751737650172, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325475936, "name": "0.6666666666666666", "id": -4601659744691921001, "value": 0.6666666666666666, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326599552, "name": "*", "id": -2432302278190366528, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326722944, "name": "*", "id": 7382909411869586226, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730288, "name": "*", "id": 3479221902762568791, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325472720, "name": "2e-05", "id": -416325789226925075, "value": 2e-05, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326730144, "name": "**", "id": -3866013196173468146, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326729472, "name": "maximum", "id": -38866897276748842, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324524848, "name": "1e-08", "id": 2248593343453076709, "value": 1e-08, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326715984, "name": "@", "id": -381515773720244289, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326730096, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326729856, "name": "**", "id": -1868943510485275387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326730432, "name": "maximum", "id": -4830756954153364032, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326730480, "name": "minimum", "id": -7371976683556488613, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326729712, "name": "@", "id": -7947777665951828331, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326717136, "name": "Sparse Matrix (1, 20)", "id": -1311178267164410342, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-12491.630996921805, 37474.892990765504], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195968, "name": "24983.261744011077", "id": -173151486002828470, "value": 24983.261744011077, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195008, "name": "0.000249832619938437", "id": 5018604233361534579, "value": 0.000249832619938437, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6215798272, "name": "@", "id": -2607619662398425646, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326719632, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326724432, "name": "**", "id": 8840658232720572223, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326723184, "name": "-", "id": 2338145762588095178, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325193376, "name": "Maximum concentration in negative electrode [mol.m-3]", "id": -4006365182696779717, "value": 24983.2619938437, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326730432, "name": "maximum", "id": -4830756954153364032, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326730480, "name": "minimum", "id": -7371976683556488613, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326729712, "name": "@", "id": -7947777665951828331, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326717136, "name": "Sparse Matrix (1, 20)", "id": -1311178267164410342, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-12491.630996921805, 37474.892990765504], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195968, "name": "24983.261744011077", "id": -173151486002828470, "value": 24983.261744011077, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195008, "name": "0.000249832619938437", "id": 5018604233361534579, "value": 0.000249832619938437, "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951840, "name": "+", "id": 2221407163864304667, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950976, "name": "+", "id": -2960133066485095630, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326950352, "name": "-", "id": -9139240763802421065, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326949776, "name": "-", "id": -380020215870947602, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326949104, "name": "-", "id": -8985395728359068257, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326948432, "name": "-", "id": -8728344082884186819, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326947808, "name": "-", "id": -824067711031895542, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326947184, "name": "-", "id": -4998106132020497923, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946560, "name": "+", "id": 7528121021614073017, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326945888, "name": "+", "id": 5359849752092524006, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477856, "name": "0.194", "id": 4251029814298257343, "value": 0.194, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326945744, "name": "*", "id": 7639587925667497463, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477568, "name": "1.5", "id": -1860591468980405701, "value": 1.5, "children": []}, {"py/object": "pybamm.expression_tree.functions.Exp", "py/id": 6326944208, "name": "function (exp)", "id": 3180788988723656329, "function": "exp", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326945648, "name": "*", "id": -37345490762490615, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477136, "name": "-120.0", "id": -2425182868076845414, "value": -120.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946416, "name": "*", "id": 7099450262039018463, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478624, "name": "0.0351", "id": -161632893335429177, "value": 0.0351, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326945552, "name": "function (tanh)", "id": 8454667870790248030, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946224, "name": "+", "id": 7942467795480504387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478960, "name": "-3.44578313253012", "id": 8444925721582764742, "value": -3.44578313253012, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946080, "name": "*", "id": 8381823886301776259, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478720, "name": "12.048192771084336", "id": 8097125027648466415, "value": 12.048192771084336, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947040, "name": "*", "id": 2048096631300921014, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478576, "name": "0.0045", "id": -2981038650488801168, "value": 0.0045, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326945984, "name": "function (tanh)", "id": -1623400745941997014, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946848, "name": "+", "id": -2416178302035251812, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480208, "name": "-7.1344537815126055", "id": 1460317602928865068, "value": -7.1344537815126055, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946752, "name": "*", "id": -851868951156677450, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480016, "name": "8.403361344537815", "id": 1404623847793106708, "value": 8.403361344537815, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947664, "name": "*", "id": -4019228816394572527, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480736, "name": "0.035", "id": 6162767455658282703, "value": 0.035, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326946656, "name": "function (tanh)", "id": -1150884761896753166, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326947520, "name": "+", "id": 7644935680070045406, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325481552, "name": "-18.466", "id": -373623245734958046, "value": -18.466, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947376, "name": "*", "id": 5731199625910651132, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325481264, "name": "20.0", "id": -4340446481305119942, "value": 20.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948288, "name": "*", "id": -8398586198298319237, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325482944, "name": "0.0147", "id": 3513533554870653346, "value": 0.0147, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326946944, "name": "function (tanh)", "id": 6946148157129530496, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326948096, "name": "+", "id": 3779098074371246036, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325483136, "name": "-14.705882352941176", "id": -5925813036394720848, "value": -14.705882352941176, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947952, "name": "*", "id": -2391216548457030335, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325482800, "name": "29.41176470588235", "id": -1937713174565683752, "value": 29.41176470588235, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948960, "name": "*", "id": -6309866705551813062, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325313968, "name": "0.102", "id": -3729995203387465972, "value": 0.102, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326947856, "name": "function (tanh)", "id": -4550779299409160821, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326948768, "name": "+", "id": 1480749490317416490, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325198608, "name": "-1.3661971830985917", "id": -8384546222245432196, "value": -1.3661971830985917, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948624, "name": "*", "id": 3728936636961048916, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484672, "name": "7.042253521126761", "id": 6960204674628031657, "value": 7.042253521126761, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949632, "name": "*", "id": 4649296532770888742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484336, "name": "0.022", "id": -1950766998167305555, "value": 0.022, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326948528, "name": "function (tanh)", "id": 1577914864793947784, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326949440, "name": "+", "id": -9088454947200883348, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484288, "name": "-54.8780487804878", "id": 7787322731592813793, "value": -54.8780487804878, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949296, "name": "*", "id": -1686636676232609815, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484144, "name": "60.975609756097555", "id": -65658111227441629, "value": 60.975609756097555, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950208, "name": "*", "id": 7119747142001126644, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480688, "name": "0.011", "id": 2677758333144557655, "value": 0.011, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326949200, "name": "function (tanh)", "id": 1097948657258569153, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950064, "name": "+", "id": 6534944802070438685, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325479440, "name": "-5.486725663716814", "id": 6197169621668094767, "value": -5.486725663716814, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949920, "name": "*", "id": -4763378136876713897, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325479968, "name": "44.24778761061947", "id": -6493965988769950205, "value": 44.24778761061947, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950832, "name": "*", "id": -6669455122115546387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477472, "name": "0.0155", "id": -2650083987933338625, "value": 0.0155, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326949536, "name": "function (tanh)", "id": 206273733215490184, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950688, "name": "+", "id": -2889338946402326512, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325474976, "name": "-3.6206896551724133", "id": -1794731523492796600, "value": -3.6206896551724133, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950544, "name": "*", "id": 6284796480753054853, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325476656, "name": "34.48275862068965", "id": -2390830538731112535, "value": 34.48275862068965, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326951696, "name": "*", "id": -6493752423506966711, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324528208, "name": "1e-06", "id": -3069320665520676574, "value": 1e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951552, "name": "+", "id": -6741445237676707870, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326950448, "name": "/", "id": 4057728519080426641, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326951120, "name": "/", "id": -3310090966227999806, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951264, "name": "+", "id": -6773688724399837147, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324527776, "name": "-1.0", "id": -8456763896046725936, "value": -1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326956928, "name": "@", "id": 8483904739322685359, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326957120, "name": "Sparse Matrix (1, 20)", "id": 1038870521767603098, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0015415547472896235, 0.0015415547472896235, 0.0015415547472896237, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896244, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896255, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Log", "py/id": 6326954288, "name": "function (log)", "id": -5030701221925340772, "function": "log", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326955536, "name": "maximum", "id": 4171024460717429445, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326955632, "name": "/", "id": -1900829629222783454, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955728, "name": "@", "id": -7873392624484173844, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955584, "name": "Sparse Matrix (20, 60)", "id": 8094614243801919291, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 60], "data": [0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223], "row_indices": [59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], "column_pointers": [0, 60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 660, 720, 780, 840, 900, 960, 1020, 1080, 1140, 1200]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324847536, "name": "1e-15", "id": -8705571835474137486, "value": 1e-15, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959904, "name": "*", "id": -4123933597739443935, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325509184, "name": "0.0024", "id": 6559832735740966387, "value": 0.0024, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959760, "name": "-", "id": 3029823735963637756, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326957456, "name": "/", "id": -5357639576507355315, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324849120, "name": "0.3333333333333333", "id": -5701793740805269720, "value": 0.3333333333333333, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958512, "name": "+", "id": 284263368525210904, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326958128, "name": "-", "id": 543545805456541861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326957696, "name": "+", "id": -7842655593740600439, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658224, "name": "0.014969257496616187", "id": -8353597445683247701, "value": 0.014969257496616187, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957552, "name": "*", "id": 4960491804341474864, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658512, "name": "0.00031386145712718525", "id": 3507164062337076, "value": 0.00031386145712718525, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957984, "name": "*", "id": 7112391073554976339, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658848, "name": "1.728612391486304e-07", "id": 4207388108385797869, "value": 1.728612391486304e-07, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958368, "name": "*", "id": 7749610267777311295, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325659232, "name": "2.5534825630890845e-11", "id": -5879707510941530913, "value": 2.5534825630890845e-11, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326958656, "name": "/", "id": 6855516544202313701, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326959472, "name": "+", "id": 8012764929235198493, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959184, "name": "-", "id": -2208441102872370140, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958896, "name": "+", "id": 2767688668933281379, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325471616, "name": "0.0911", "id": -1599851476179082992, "value": 0.0911, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958752, "name": "*", "id": 6881685191875661397, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484000, "name": "0.0019100999999999999", "id": -3779973321848982182, "value": 0.0019100999999999999, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959040, "name": "*", "id": -5173557815052613389, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325654528, "name": "1.052e-06", "id": -480156392906839787, "value": 1.052e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959328, "name": "*", "id": -9177911052441474098, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325652992, "name": "1.5540000000000003e-10", "id": -3428780814341171134, "value": 1.5540000000000003e-10, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327546032, "name": "@", "id": -2997497083290451214, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327546416, "name": "Sparse Matrix (1, 20)", "id": -5010322150182913717, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0015415547472896274, 0.0015415547472896192, 0.0015415547472896192, 0.0015415547472896274, 0.0015415547472896274, 0.0015415547472896192, 0.0015415547472896192, 0.0015415547472896274, 0.0015415547472896274, 0.0015415547472896192, 0.0015415547472896192, 0.0015415547472896274, 0.0015415547472896274, 0.0015415547472896192, 0.0015415547472896192, 0.0015415547472896274, 0.0015415547472896274, 0.0015415547472896192, 0.0015415547472896192, 0.0015415547472896274], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Log", "py/id": 6326854400, "name": "function (log)", "id": 9100380297557791119, "function": "log", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326854352, "name": "maximum", "id": -4986823990311929281, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326856992, "name": "/", "id": -1412731153990944070, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326848880, "name": "*", "id": -1024443419409141381, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326852048, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326950160, "name": "y[82:102]", "id": 5004984274525037322, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 82, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326856896, "name": "@", "id": -2924452854392613021, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326856944, "name": "Sparse Matrix (20, 60)", "id": 8094614243801919291, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 60], "data": [0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223], "row_indices": [59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], "column_pointers": [0, 60, 120, 180, 240, 300, 360, 420, 480, 540, 600, 660, 720, 780, 840, 900, 960, 1020, 1080, 1140, 1200]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324847536, "name": "1e-15", "id": -8705571835474137486, "value": 1e-15, "children": []}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327548480, "name": "@", "id": 9199290068259236999, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327548288, "name": "Column vector of length 1", "id": -969989925248889039, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 1], "data": [3.3343750000000014e-05], "row_indices": [0], "column_pointers": [0, 1]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326845712, "name": "/", "id": 2000317851754806712, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305760, "name": "23.999999999999996", "id": -1312225410768614328, "value": 23.999999999999996, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958512, "name": "+", "id": 284263368525210904, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326958128, "name": "-", "id": 543545805456541861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326957696, "name": "+", "id": -7842655593740600439, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658224, "name": "0.014969257496616187", "id": -8353597445683247701, "value": 0.014969257496616187, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957552, "name": "*", "id": 4960491804341474864, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658512, "name": "0.00031386145712718525", "id": 3507164062337076, "value": 0.00031386145712718525, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326957984, "name": "*", "id": 7112391073554976339, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325658848, "name": "1.728612391486304e-07", "id": 4207388108385797869, "value": 1.728612391486304e-07, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958368, "name": "*", "id": 7749610267777311295, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325659232, "name": "2.5534825630890845e-11", "id": -5879707510941530913, "value": 2.5534825630890845e-11, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326858432, "name": "/", "id": 4483006077393506350, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325966736, "name": "0.0029999999999999996", "id": 1686576887488082418, "value": 0.0029999999999999996, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326959472, "name": "+", "id": 8012764929235198493, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326959184, "name": "-", "id": -2208441102872370140, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326958896, "name": "+", "id": 2767688668933281379, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325471616, "name": "0.0911", "id": -1599851476179082992, "value": 0.0911, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326958752, "name": "*", "id": 6881685191875661397, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484000, "name": "0.0019100999999999999", "id": -3779973321848982182, "value": 0.0019100999999999999, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959040, "name": "*", "id": -5173557815052613389, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325654528, "name": "1.052e-06", "id": -480156392906839787, "value": 1.052e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326957840, "name": "**", "id": 2708463104784758684, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324478480, "name": "2.0", "id": -2621786909280879259, "value": 2.0, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326959328, "name": "*", "id": -9177911052441474098, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325652992, "name": "1.5540000000000003e-10", "id": -3428780814341171134, "value": 1.5540000000000003e-10, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326958224, "name": "**", "id": 7192320206219513730, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326956016, "name": "maximum", "id": 3374368148438160642, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955440, "name": "@", "id": 1364084033325938676, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955248, "name": "Sparse Matrix (1, 60)", "id": 3096811200531919608, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 60], "data": [0.022222222222222223, 0.022222222222222223, 0.022222222222222227, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "column_pointers": [0, 60]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326954576, "name": "*", "id": -7403130765402288652, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326954480, "name": "Column vector of length 60", "id": -3290586578244431504, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [1000.0], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335], [3333.3333333333335]], "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326946368, "name": "y[42:102]", "id": 7128948691676523706, "domains": {"primary": ["negative electrode", "separator", "positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324763104, "name": "10.0", "id": -2114668288419383568, "value": 10.0, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324392576, "name": "3.0", "id": 8588159289025321275, "value": 3.0, "children": []}]}]}]}]}]}]}]}]}]}}, {"py/object": "pybamm.models.event.Event", "py/id": 6327986000, "name": "Maximum voltage switch [V]", "event_type": ["EventType.SWITCH", 3], "expression": {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6328078880, "name": "+", "id": 5863575472562210074, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6328078784, "name": "Column vector of length 1", "id": 6727474142466607874, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "entries": [[-4.200921649318004]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327978272, "name": "@", "id": 6784395123585641641, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6327978224, "name": "Column vector of length 1", "id": 8974974551673498401, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 1], "data": [1.0], "row_indices": [0], "column_pointers": [0, 1]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327548960, "name": "+", "id": 2047164259306671834, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325968896, "name": "0.0007854359432768872", "id": 9043761854608558187, "value": 0.0007854359432768872, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327548816, "name": "+", "id": 6932362662972156975, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327543248, "name": "+", "id": 4840300324861772786, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327541136, "name": "@", "id": -2709079084813101903, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327542048, "name": "Sparse Matrix (1, 20)", "id": 3368198892565785478, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379, 0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379, 0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379, 0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379, 0.002569257912149379, 0.002569257912149365, 0.002569257912149365, 0.002569257912149379], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Arcsinh", "py/id": 6327178864, "name": "function (arcsinh)", "id": 7762713935640245493, "function": "arcsinh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6327545264, "name": "/", "id": 4944969372638363630, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325879680, "name": "-0.7999999999999998", "id": -3710793542993154521, "value": -0.7999999999999998, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327543824, "name": "*", "id": 4361800515267115836, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327179248, "name": "*", "id": -1491280552144432845, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327542192, "name": "*", "id": 5229285744879996886, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325761760, "name": "6e-07", "id": -6590763337784132718, "value": 6e-07, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6327541904, "name": "**", "id": 4795026116698599361, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327541760, "name": "maximum", "id": 4201724619927351633, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326848880, "name": "*", "id": -1024443419409141381, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326852048, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326950160, "name": "y[82:102]", "id": 5004984274525037322, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 82, "stop": 102, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324524848, "name": "1e-08", "id": 2248593343453076709, "value": 1e-08, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327543008, "name": "@", "id": -1517419550502331233, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327182464, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6327542624, "name": "**", "id": -8861031940181067515, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327542384, "name": "maximum", "id": -6537165250718408597, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327541472, "name": "minimum", "id": -3458429554634586861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 5717422352, "name": "@", "id": 7895283603065353686, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5717029328, "name": "Sparse Matrix (1, 20)", "id": 7679991478818445457, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-25608.96286546366, 76826.88859639116], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760032, "name": "51217.92521874824", "id": 7356165989114971861, "value": 51217.92521874824, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760224, "name": "0.000512179257309275", "id": 5257926711616135225, "value": 0.000512179257309275, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6327543728, "name": "@", "id": -6047761952718693602, "domains": {"primary": ["positive electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6327542960, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6327543296, "name": "**", "id": 3295831492052380392, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327543152, "name": "-", "id": -1561935877243134980, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325206192, "name": "Maximum concentration in positive electrode [mol.m-3]", "id": 3383638487514802611, "value": 51217.9257309275, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327542384, "name": "maximum", "id": -6537165250718408597, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327541472, "name": "minimum", "id": -3458429554634586861, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 5717422352, "name": "@", "id": 7895283603065353686, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5717029328, "name": "Sparse Matrix (1, 20)", "id": 7679991478818445457, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-25608.96286546366, 76826.88859639116], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760032, "name": "51217.92521874824", "id": 7356165989114971861, "value": 51217.92521874824, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760224, "name": "0.000512179257309275", "id": 5257926711616135225, "value": 0.000512179257309275, "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327411456, "name": "+", "id": -8542356934082764471, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327410640, "name": "-", "id": -5881486871864474767, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327403968, "name": "+", "id": 168258033325559907, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327406464, "name": "+", "id": 5410227661158463177, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327409296, "name": "-", "id": -3873191716778206204, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327346928, "name": "+", "id": 1646407663188186445, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327349952, "name": "+", "id": 4576194534802704835, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325882224, "name": "2.16216", "id": -6538175388565902983, "value": 2.16216, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327350384, "name": "*", "id": 6489020822145545842, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325881936, "name": "0.07645", "id": -5342533196016870602, "value": 0.07645, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327353072, "name": "function (tanh)", "id": 2765804916049038233, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327350960, "name": "-", "id": 5417692422309938819, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325881360, "name": "30.834", "id": 3553451709505253030, "value": 30.834, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327351440, "name": "*", "id": -7833679857076767803, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325881600, "name": "57.858397200000006", "id": 262757461604605267, "value": 57.858397200000006, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327344384, "name": "*", "id": 5855291803804478793, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325883280, "name": "2.1581", "id": 171215566333379780, "value": 2.1581, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327352016, "name": "function (tanh)", "id": 5182007766462265224, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327342128, "name": "-", "id": 3840219384412517367, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325882656, "name": "52.294", "id": -3837164720916464014, "value": 52.294, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327339104, "name": "*", "id": 3886975233785916872, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325882896, "name": "53.412228", "id": -9004879587580661632, "value": 53.412228, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327410160, "name": "*", "id": 1699323359140065157, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325884384, "name": "0.14169", "id": 6813787300680519218, "value": 0.14169, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327349616, "name": "function (tanh)", "id": -3624863381786532785, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327183088, "name": "-", "id": -437413265044690370, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325883712, "name": "11.0923", "id": 491185198450840868, "value": 11.0923, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327349280, "name": "*", "id": -5059234426370817495, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325884000, "name": "21.0852666", "id": -8665792741501690641, "value": 21.0852666, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327406992, "name": "*", "id": -3061923374072712376, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325762768, "name": "0.2051", "id": 2501232069797586549, "value": 0.2051, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327348512, "name": "function (tanh)", "id": 8446755331654659984, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327407808, "name": "-", "id": 6377154851368915274, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325763584, "name": "1.4684", "id": -7365290409052234874, "value": 1.4684, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327408672, "name": "*", "id": -3960981466435738632, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325748800, "name": "5.829105600000001", "id": 7483569177371509393, "value": 5.829105600000001, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327404400, "name": "*", "id": 2518374496591121073, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325749808, "name": "0.2531", "id": 3171899822705762194, "value": 0.2531, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327408960, "name": "function (tanh)", "id": -4703533040549178695, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327405216, "name": "-", "id": -8664962568826517430, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325749568, "name": "4.291641337386018", "id": 1807961534807208439, "value": 4.291641337386018, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327405696, "name": "*", "id": 3321095232564544938, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325757488, "name": "8.069908814589667", "id": 890690238775003320, "value": 8.069908814589667, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327410496, "name": "*", "id": 4164389431130363427, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325760944, "name": "0.02167", "id": 6114961391790505965, "value": 0.02167, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6327406224, "name": "function (tanh)", "id": 2383522471588310035, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327402576, "name": "+", "id": -1815583232254096246, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325656544, "name": "-87.5", "id": -482487959955197032, "value": -87.5, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327403296, "name": "*", "id": 4692026063749961978, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325506160, "name": "177.0", "id": 8660501241415816461, "value": 177.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6327411360, "name": "*", "id": -355396826553107643, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324528208, "name": "1e-06", "id": -3069320665520676574, "value": 1e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327411216, "name": "+", "id": -2127618415987058030, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6327410400, "name": "/", "id": 8352833115125343175, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6327410784, "name": "/", "id": -3674833742996593706, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327410928, "name": "+", "id": 8922130656719774178, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324527776, "name": "-1.0", "id": -8456763896046725936, "value": -1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6327351968, "name": "maximum", "id": 8636413957123383519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6327353024, "name": "minimum", "id": -6962918094149101742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6320768352, "name": "@", "id": 2344461683756480540, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 5712946160, "name": "Sparse Matrix (1, 20)", "id": 8052296986667132309, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999982], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6324697088, "name": "y[22:42]", "id": -71875136370346104, "domains": {"primary": ["positive particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 22, "stop": 42, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327548672, "name": "-", "id": 7645111419658218519, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6327548336, "name": "-", "id": -9167430632146772526, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6327546080, "name": "+", "id": -118652456975249921, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326960048, "name": "-", "id": 8166320490570836002, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326957024, "name": "-", "id": -1426400927845783288, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326953280, "name": "+", "id": -87681102096113063, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.vector.Vector", "py/id": 6326953136, "name": "Column vector of length 1", "id": 7498350506610149221, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "entries": [[-1.3664024208854978e-05]], "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326952128, "name": "-", "id": -3553484892908894406, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326728224, "name": "+", "id": -8293531578467133416, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326716848, "name": "@", "id": -7897331072600810934, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326716944, "name": "Sparse Matrix (1, 20)", "id": 2554937835408777545, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-6.666666666666666e-05, -6.666666666666666e-05, -6.666666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.66666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666674e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326724192, "name": "y[102:122]", "id": 5822907568351388675, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 102, "stop": 122, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326717088, "name": "@", "id": 2408778673299547818, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326728320, "name": "Sparse Matrix (1, 20)", "id": 2554937835408777545, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-6.666666666666666e-05, -6.666666666666666e-05, -6.666666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.66666666666667e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666674e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05, -6.666666666666664e-05], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326597200, "name": "y[122:142]", "id": -4654073562494662926, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 122, "stop": 142, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951984, "name": "+", "id": -6068800631112939481, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944880, "name": "@", "id": 4277053689203630480, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326944688, "name": "Sparse Matrix (1, 20)", "id": -2763416208417960285, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0025692579121493727, 0.0025692579121493727, 0.002569257912149373, 0.0025692579121493727, 0.0025692579121493727, 0.002569257912149374, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493757, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727, 0.0025692579121493727], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Arcsinh", "py/id": 6326729184, "name": "function (arcsinh)", "id": 5781459614506051753, "function": "arcsinh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326726304, "name": "/", "id": 2429643751737650172, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325475936, "name": "0.6666666666666666", "id": -4601659744691921001, "value": 0.6666666666666666, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326599552, "name": "*", "id": -2432302278190366528, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326722944, "name": "*", "id": 7382909411869586226, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730288, "name": "*", "id": 3479221902762568791, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325472720, "name": "2e-05", "id": -416325789226925075, "value": 2e-05, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326730144, "name": "**", "id": -3866013196173468146, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326729472, "name": "maximum", "id": -38866897276748842, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324524848, "name": "1e-08", "id": 2248593343453076709, "value": 1e-08, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326715984, "name": "@", "id": -381515773720244289, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326730096, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326729856, "name": "**", "id": -1868943510485275387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326730432, "name": "maximum", "id": -4830756954153364032, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326730480, "name": "minimum", "id": -7371976683556488613, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326729712, "name": "@", "id": -7947777665951828331, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326717136, "name": "Sparse Matrix (1, 20)", "id": -1311178267164410342, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-12491.630996921805, 37474.892990765504], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195968, "name": "24983.261744011077", "id": -173151486002828470, "value": 24983.261744011077, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195008, "name": "0.000249832619938437", "id": 5018604233361534579, "value": 0.000249832619938437, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6215798272, "name": "@", "id": -2607619662398425646, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326719632, "name": "Sparse Matrix (20, 1)", "id": -1754451502328930154, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 1], "data": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], "row_indices": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "column_pointers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Power", "py/id": 6326724432, "name": "**", "id": 8840658232720572223, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326723184, "name": "-", "id": 2338145762588095178, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325193376, "name": "Maximum concentration in negative electrode [mol.m-3]", "id": -4006365182696779717, "value": 24983.2619938437, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326730432, "name": "maximum", "id": -4830756954153364032, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326730480, "name": "minimum", "id": -7371976683556488613, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326729712, "name": "@", "id": -7947777665951828331, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326717136, "name": "Sparse Matrix (1, 20)", "id": -1311178267164410342, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-12491.630996921805, 37474.892990765504], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195968, "name": "24983.261744011077", "id": -173151486002828470, "value": 24983.261744011077, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325195008, "name": "0.000249832619938437", "id": 5018604233361534579, "value": 0.000249832619938437, "children": []}]}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325305520, "name": "Inner SEI reaction proportion", "id": 2665655730038741742, "value": 0.5, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951840, "name": "+", "id": 2221407163864304667, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950976, "name": "+", "id": -2960133066485095630, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326950352, "name": "-", "id": -9139240763802421065, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326949776, "name": "-", "id": -380020215870947602, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326949104, "name": "-", "id": -8985395728359068257, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326948432, "name": "-", "id": -8728344082884186819, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326947808, "name": "-", "id": -824067711031895542, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Subtraction", "py/id": 6326947184, "name": "-", "id": -4998106132020497923, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946560, "name": "+", "id": 7528121021614073017, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326945888, "name": "+", "id": 5359849752092524006, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477856, "name": "0.194", "id": 4251029814298257343, "value": 0.194, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326945744, "name": "*", "id": 7639587925667497463, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477568, "name": "1.5", "id": -1860591468980405701, "value": 1.5, "children": []}, {"py/object": "pybamm.expression_tree.functions.Exp", "py/id": 6326944208, "name": "function (exp)", "id": 3180788988723656329, "function": "exp", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326945648, "name": "*", "id": -37345490762490615, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477136, "name": "-120.0", "id": -2425182868076845414, "value": -120.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946416, "name": "*", "id": 7099450262039018463, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478624, "name": "0.0351", "id": -161632893335429177, "value": 0.0351, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326945552, "name": "function (tanh)", "id": 8454667870790248030, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946224, "name": "+", "id": 7942467795480504387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478960, "name": "-3.44578313253012", "id": 8444925721582764742, "value": -3.44578313253012, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946080, "name": "*", "id": 8381823886301776259, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478720, "name": "12.048192771084336", "id": 8097125027648466415, "value": 12.048192771084336, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947040, "name": "*", "id": 2048096631300921014, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325478576, "name": "0.0045", "id": -2981038650488801168, "value": 0.0045, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326945984, "name": "function (tanh)", "id": -1623400745941997014, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326946848, "name": "+", "id": -2416178302035251812, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480208, "name": "-7.1344537815126055", "id": 1460317602928865068, "value": -7.1344537815126055, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326946752, "name": "*", "id": -851868951156677450, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480016, "name": "8.403361344537815", "id": 1404623847793106708, "value": 8.403361344537815, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947664, "name": "*", "id": -4019228816394572527, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480736, "name": "0.035", "id": 6162767455658282703, "value": 0.035, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326946656, "name": "function (tanh)", "id": -1150884761896753166, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326947520, "name": "+", "id": 7644935680070045406, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325481552, "name": "-18.466", "id": -373623245734958046, "value": -18.466, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947376, "name": "*", "id": 5731199625910651132, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325481264, "name": "20.0", "id": -4340446481305119942, "value": 20.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948288, "name": "*", "id": -8398586198298319237, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325482944, "name": "0.0147", "id": 3513533554870653346, "value": 0.0147, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326946944, "name": "function (tanh)", "id": 6946148157129530496, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326948096, "name": "+", "id": 3779098074371246036, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325483136, "name": "-14.705882352941176", "id": -5925813036394720848, "value": -14.705882352941176, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326947952, "name": "*", "id": -2391216548457030335, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325482800, "name": "29.41176470588235", "id": -1937713174565683752, "value": 29.41176470588235, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948960, "name": "*", "id": -6309866705551813062, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325313968, "name": "0.102", "id": -3729995203387465972, "value": 0.102, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326947856, "name": "function (tanh)", "id": -4550779299409160821, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326948768, "name": "+", "id": 1480749490317416490, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325198608, "name": "-1.3661971830985917", "id": -8384546222245432196, "value": -1.3661971830985917, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326948624, "name": "*", "id": 3728936636961048916, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484672, "name": "7.042253521126761", "id": 6960204674628031657, "value": 7.042253521126761, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949632, "name": "*", "id": 4649296532770888742, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484336, "name": "0.022", "id": -1950766998167305555, "value": 0.022, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326948528, "name": "function (tanh)", "id": 1577914864793947784, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326949440, "name": "+", "id": -9088454947200883348, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484288, "name": "-54.8780487804878", "id": 7787322731592813793, "value": -54.8780487804878, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949296, "name": "*", "id": -1686636676232609815, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325484144, "name": "60.975609756097555", "id": -65658111227441629, "value": 60.975609756097555, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950208, "name": "*", "id": 7119747142001126644, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325480688, "name": "0.011", "id": 2677758333144557655, "value": 0.011, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326949200, "name": "function (tanh)", "id": 1097948657258569153, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950064, "name": "+", "id": 6534944802070438685, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325479440, "name": "-5.486725663716814", "id": 6197169621668094767, "value": -5.486725663716814, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326949920, "name": "*", "id": -4763378136876713897, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325479968, "name": "44.24778761061947", "id": -6493965988769950205, "value": 44.24778761061947, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950832, "name": "*", "id": -6669455122115546387, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325477472, "name": "0.0155", "id": -2650083987933338625, "value": 0.0155, "children": []}, {"py/object": "pybamm.expression_tree.functions.Tanh", "py/id": 6326949536, "name": "function (tanh)", "id": 206273733215490184, "function": "tanh", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326950688, "name": "+", "id": -2889338946402326512, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325474976, "name": "-3.6206896551724133", "id": -1794731523492796600, "value": -3.6206896551724133, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326950544, "name": "*", "id": 6284796480753054853, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325476656, "name": "34.48275862068965", "id": -2390830538731112535, "value": 34.48275862068965, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326951696, "name": "*", "id": -6493752423506966711, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324528208, "name": "1e-06", "id": -3069320665520676574, "value": 1e-06, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951552, "name": "+", "id": -6741445237676707870, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326950448, "name": "/", "id": 4057728519080426641, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326951120, "name": "/", "id": -3310090966227999806, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326393776, "name": "1.0", "id": 5795391820243425612, "value": 1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Addition", "py/id": 6326951264, "name": "+", "id": -6773688724399837147, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6324527776, "name": "-1.0", "id": -8456763896046725936, "value": -1.0, "children": []}, {"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326945120, "name": "maximum", "id": 358701843956677679, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Minimum", "py/id": 6326944064, "name": "minimum", "id": -2883964669640593168, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326944976, "name": "@", "id": 6628633887338935591, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326945168, "name": "Sparse Matrix (1, 20)", "id": 3773968494218992634, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [-0.4999999999999983, 1.4999999999999984], "row_indices": [18, 19], "column_pointers": [0, 2]}, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729808, "name": "y[2:22]", "id": 6019965974249354572, "domains": {"primary": ["negative particle"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 2, "stop": 22, "step": null}], "evaluation_array": [false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084592, "name": "0.9999999999", "id": -5118038152724383968, "value": 0.9999999999, "children": []}]}, {"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6325084832, "name": "1e-10", "id": -2928246563552495060, "value": 1e-10, "children": []}]}]}]}]}]}]}]}]}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326956928, "name": "@", "id": 8483904739322685359, "domains": {"primary": ["current collector"], "secondary": [], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326957120, "name": "Sparse Matrix (1, 20)", "id": 1038870521767603098, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [1, 20], "data": [0.0015415547472896235, 0.0015415547472896235, 0.0015415547472896237, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896244, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896255, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233, 0.0015415547472896233], "row_indices": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "column_pointers": [0, 20]}, "children": []}, {"py/object": "pybamm.expression_tree.functions.Log", "py/id": 6326954288, "name": "function (log)", "id": -5030701221925340772, "function": "log", "children": [{"py/object": "pybamm.expression_tree.binary_operators.Maximum", "py/id": 6326955536, "name": "maximum", "id": 4171024460717429445, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Division", "py/id": 6326955632, "name": "/", "id": -1900829629222783454, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.binary_operators.Multiplication", "py/id": 6326730000, "name": "*", "id": 1886490483474785201, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.scalar.Scalar", "py/id": 6326729952, "name": "3333.3333333333335", "id": 303749093857019261, "value": 3333.3333333333335, "children": []}, {"py/object": "pybamm.expression_tree.state_vector.StateVector", "py/id": 6326729136, "name": "y[42:62]", "id": 2585126377060378992, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "y_slice": [{"start": 42, "stop": 62, "step": null}], "evaluation_array": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], "children": []}]}, {"py/object": "pybamm.expression_tree.binary_operators.MatrixMultiplication", "py/id": 6326955728, "name": "@", "id": -7873392624484173844, "domains": {"primary": ["negative electrode"], "secondary": ["current collector"], "tertiary": [], "quaternary": []}, "children": [{"py/object": "pybamm.expression_tree.matrix.Matrix", "py/id": 6326955584, "name": "Sparse Matrix (20, 60)", "id": 8094614243801919291, "domains": {"primary": [], "secondary": [], "tertiary": [], "quaternary": []}, "entries": {"shape": [20, 60], "data": [0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222225, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.022222222222222233, 0.02222222222222222, 0.02222222222222222, 0.022222222222222227, 0.022222222222222223, 0.022222222222222223, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.02222222222222228, 0.02222222222222216, 0.02222222222222216, 0.02222222222222228, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555557, 0.00555555555555551, 0.00555555555555557, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222, 0.02222222222222222